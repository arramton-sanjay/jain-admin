{"version":3,"file":"static/js/106.4c62cc36.chunk.js","mappings":"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","sources":["views/pages/Dashboard.js","services/module.js","views/components/Pagination.js","views/pages/Module.js","services/file.js","utils/UploadImage.js","views/pages/SubAdmin.js","services/bhagwan.js","services/kalyanak.js","services/jinalaya.js","views/pages/temple/Kalyanak.js","views/pages/Bhagwan.js","services/location.js","services/shala.js","views/pages/temple/Shala.js","views/pages/temple/Jinalaya.js","views/pages/location/City.js","views/pages/location/District.js","views/pages/location/State.js","services/event.js","views/pages/Event.js","services/job.js","views/pages/jobPortal/Job.js","views/pages/jobPortal/JobSeeker.js","views/pages/User.js","services/ecomm.js","views/pages/ecomm/SubCategory.js","views/pages/ecomm/Category.js","views/pages/ecomm/Attribute.js","views/pages/ecomm/ProductAttributes.js","views/pages/ecomm/Products.js","services/jainWorld.js","views/pages/jainWorld/Image.js","utils/UploadVideo.js","views/pages/jainWorld/Video.js","views/layout/route.js","views/pages/music/SingerType.js","views/pages/music/Singer.js","views/pages/music/SongCategory.js","views/pages/music/Song.js","views/pages/user/Profile.js","views/pages/user/ChangePassword.js","views/layout/Menu.js","views/layout/Breadcrumb.js","views/pages/errors/Error404.js","views/layout/Top.js","views/layout/Layout.js"],"sourcesContent":["const App = () => {\n    return (\n        <>\n            <h2 style={{textAlign: 'center'}}>Dashboard Coming Soon...</h2>\n        </>\n    );\n};\n\nexport default App;","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'module';\n\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static save(data) {\n        return axios.post(this.baseURL + \"/save\", data);\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', {ids: id});\n    }\n\n}","import { Pagination, Tag } from 'antd';\nexport default function MyPagination(props) {\n    const { qData, setQData } = props;\n\n    const handleChange = (page, pp) => {\n        if (qData.limit !== pp) {\n            setQData({ ...qData, page: 1, limit: pp });\n        } else {\n            setQData({ ...qData, page: page });\n        }\n    }\n\n    const showTotal = () => {\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\n        let end = qData.page * qData.limit;\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\n    }\n    return (\n        <>\n            {\n                qData.total > 0\n                    ? <Pagination\n                        total={qData.total}\n                        showTotal={showTotal}\n                        pageSize={qData.limit}\n                        current={qData.page}\n                        onChange={handleChange}\n                        showSizeChanger={true}\n                    />\n                    : null\n            }\n        </>\n    );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/module';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport util from '../../utils/util';\n\nexport default function Module() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Title',\n            dataIndex: 'title',\n            width: 300,\n        },\n        {\n            title: 'Code',\n            dataIndex: 'code',\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this module?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addModalRef.current.openForm(row) }} />\n                </>\n            }\n        },\n    ];\n\n    function list() {\n        setLoading(true);\n        service.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Modules</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addModalRef} {...{ list }} />\n        </>\n    );\n};\n\nfunction Search({ addModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{marginBottom: 0}}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item style={{marginBottom: 0}}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected modules?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt ? { ...dt } : { status: true });\n        }\n    }));\n\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\n\n    const save = () => {\n        setAjxRequesting(true);\n\n        service.save(data).then((res) => {\n            AntdMsg(res.message);\n            setOpen(false);\n            list();\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    useEffect(() => {\n        if (!data._id) {\n            handleChange(util.removeSpecialChars(data?.title || ''), 'code');\n        }\n    }, [data.title])\n\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Module'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Title\" required>\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange(e.target.value, 'title') }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Code\" required>\n                                    <Input placeholder=\"Code\" value={data.code} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), 'code') }} />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'file';\n\n    static get(url) {\n        return axios.get(\"../\"+  url);\n    }\n\n    static save(data, config) {\n        return axios.post(this.baseURL + \"/save\", data, config);\n    }\n    static remove(data) {\n        return axios.post(this.baseURL + \"/remove\", data);\n    }\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Upload } from \"antd\";\nimport ImgCrop from 'antd-img-crop';\nimport fileService from \"../services/file\";\nimport React from \"react\";\n\nexport default function UploadImage({ fileList, setFileList, count = 1, cropImage = null, disabled = false }) {\n    const uploadImage = async options => {\n        const { onSuccess, onError, file, onProgress } = options;\n\n        const fmData = new FormData();\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\n        fmData.append(\"file\", file);\n        try {\n            fileService.save(fmData, config).then(res => {\n                onSuccess(\"Ok\");\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\n            })\n        } catch (err) {\n            onError({ err });\n        }\n    };\n\n    const handleOnChange = ({ file, fl }) => {\n        if (typeof fl !== typeof []) {\n            fl = [];\n        }\n        setFileList(fl);\n\n    };\n    const handleRemove = (file) => {\n        fileService.remove({ uid: file.uid }).then(res => {\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\n        })\n    };\n\n    if (cropImage) {\n        if (typeof cropImage !== typeof {}) {\n            cropImage = {};\n        }\n        cropImage.aspect = cropImage.aspect || 1;\n        cropImage.shape = cropImage.shape || 'rect';\n        cropImage.quality = cropImage.quality || 1;\n        return (\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\n                <Upload\n                    accept=\"image/*\"\n                    customRequest={uploadImage}\n                    onChange={handleOnChange}\n                    onRemove={handleRemove}\n                    listType=\"picture-card\"\n                    fileList={fileList}\n                    className=\"image-upload-grid\"\n                    disabled={disabled}\n                >\n                    {fileList?.length >= count ? null : <div>Upload</div>}\n                </Upload>\n            </ImgCrop>\n        );\n    } else {\n        return <Upload\n            accept=\"image/*\"\n            customRequest={uploadImage}\n            onChange={handleOnChange}\n            onRemove={handleRemove}\n            listType=\"picture-card\"\n            fileList={fileList}\n            className=\"image-upload-grid\"\n            disabled={disabled}\n        >\n            {fileList?.length >= count ? null : <div>Upload</div>}\n        </Upload>\n    }\n\n};","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Checkbox, Tag, Select } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/user';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport util from '../../utils/util';\n\nexport default function SubAdmin() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            width: 200,\n        },\n        {\n            title: 'User Name',\n            dataIndex: 'userName',\n            width: 201,\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            width: 300,\n        },\n        {\n            title: 'Allowed Modules',\n            dataIndex: 'modules',\n            render: (modules) => modules?.map(v => {\n                    return <Tag key={v} style={{textTransform: 'uppercase'}}>{v}</Tag>\n                })\n            \n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this sub admin?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                </>\n            }\n        },\n    ];\n\n    function list() {\n        setLoading(true);\n        service.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Sub admins</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            // minWidth=\"500px\"\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected sub admins?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt ? { ...dt } : { status: true });\n        }\n    }));\n\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\n\n    const save = () => {\n        setAjxRequesting(true);\n\n        service.save(data).then((res) => {\n            AntdMsg(res.message);\n            setOpen(false);\n            list();\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    useEffect(() => {\n        if (!data._id) {\n            handleChange(util.removeSpecialChars(data?.name || ''), 'userName');\n        }\n    }, [data.name])\n\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Sub Admin'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={400}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Modules\">\n                                    <Checkbox.Group\n                                        options={[{ label: 'Add', value: 'add' }, { label: 'Edit', value: 'edit' }, { label: 'Delete', value: 'delete' },]}\n                                        value={data.modules || []}\n                                        onChange={(v) => { handleChange(v, 'modules') }}\n                                    />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"User Name\" required>\n                                    <Input placeholder=\"User Name\" value={data.userName} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), 'userName') }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Password\" required={!data._id}>\n                                    <Input placeholder={!data._id ? \"Set Password\" : \"Change Password\"} value={data.password} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), 'password') }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Phone\" required>\n                                    <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange(e.target.value, 'phone') }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Email\" required>\n                                    <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange((e.target.value), 'email') }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={v => { handleChange(v, 'status') }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'bhagwan';\n\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n\n}","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'kalyanak';\n\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n\n}","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'jinalaya';\n\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../../services/kalyanak';\nimport jinalayaService from '../../../services/jinalaya';\nimport bhagwanService from '../../../services/bhagwan';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function Kalyanak({ bhagwanId = null, jinalayaId = null }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, isPopulate: 1, bhagwanId, jinalayaId });\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            width: 200,\n            render: (v) => (\n                v === 'chyavan'\n                    ? 'Chyavan'\n                    : v === 'janam'\n                        ? 'Janam'\n                        : v === 'diksha'\n                            ? 'Diksha'\n                            : v === 'kevalgyan'\n                                ? 'Kevalgyan'\n                                : v === 'nirvaan'\n                                    ? 'Nirvaan'\n                                    : ''\n            )\n        },\n        {\n            title: 'Bhagwan',\n            dataIndex: 'jinalayaDetails',\n            width: 200,\n            render: (v) => v?.bhagwanDetails?.name\n        },\n        {\n            title: 'Jinalaya',\n            dataIndex: 'jinalayaDetails',\n            width: 400,\n            render: (v) => v?.name\n        },\n        {\n            title: 'Tithi',\n            dataIndex: 'tithi',\n            width: 200,\n        },\n        {\n            title: 'Jaap',\n            dataIndex: 'jaap',\n            width: 200,\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this kalyanak?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.list(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, bhagwanId, jinalayaId }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            {\n                !bhagwanId && !jinalayaId\n                    ? <Typography.Title level={5}>List of Kalyanaks</Typography.Title>\n                    : null\n            }\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, bhagwanId, jinalayaId }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, bhagwanId, jinalayaId }) {\n\n    const [jinalayas, setJinalayas] = useState([]);\n    const [bhagwan, setBhagwan] = useState([]);\n\n    useEffect(() => {\n        if (viewAccess) {\n            jinalayaService.list({ isAll: 1, ln: 'en' }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\n            bhagwanService.list({ isAll: 1, ln: 'en' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Select placeholder=\"Name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e }))} allowClear>\n                            <Select.Option value={\"chyavan\"}>Chyavan</Select.Option>\n                            <Select.Option value={\"janam\"}>Janam</Select.Option>\n                            <Select.Option value={\"diksha\"}>Diksha</Select.Option>\n                            <Select.Option value={\"kevalgyan\"}>Kevalgyan</Select.Option>\n                            <Select.Option value={\"nirvaan\"}>Nirvaan</Select.Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item>\n                        <Select placeholder=\"Bhagwan\" value={qData.bhagwanId} onChange={v => { setQData({ ...qData, bhagwanId: v, jinalayaId: null }) }} allowClear disabled={bhagwanId} >\n                            {\n                                bhagwan.map(v => (\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                ))\n                            }\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item>\n                        <Select placeholder=\"Jinalaya\" value={qData.jinalayaId} onChange={v => { setQData({ ...qData, jinalayaId: v }) }} allowClear disabled={jinalayaId} >\n                            {\n                                jinalayas.filter(v => qData.bhagwanId ? v.bhagwanId === qData.bhagwanId : true).map(v => (\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                ))\n                            }\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected kalyanaks?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, bhagwanId, jinalayaId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n    const [fileList, setFileList] = useState([]);\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : {\n                        jinalayaId,\n                    }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data.parentId || data._id, { ln }).then(res => {\n            setData(res.data || {});\n            setFileList(res.data?.imgUrls || []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.save(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                if (ln === \"en\") {\n                    list();\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [ln, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setLn('en');\n            setFileList([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        handleChange({ imgUrls: fileList });\n    }, [fileList]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Kalyanak'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={600}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm, fileList, setFileList, bhagwanId, jinalayaId }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm, fileList, setFileList, bhagwanId, jinalayaId }} />\n                                </Card>,\n                                disabled: !data._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm, fileList, setFileList, bhagwanId, jinalayaId }} />\n                                </Card>,\n                                disabled: !data._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm, bhagwanId, jinalayaId }) => {\n    const [jinalayas, setJinalayas] = useState([]);\n\n    useEffect(() => {\n        if (viewAccess) {\n            jinalayaService.list({ isAll: 1, ln: 'en', bhagwanId }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Select value={data.name} onChange={v => { handleChange({ name: v }) }} >\n                                <Select.Option value={\"chyavan\"}>Chyavan</Select.Option>\n                                <Select.Option value={\"janam\"}>Janam</Select.Option>\n                                <Select.Option value={\"diksha\"}>Diksha</Select.Option>\n                                <Select.Option value={\"kevalgyan\"}>Kevalgyan</Select.Option>\n                                <Select.Option value={\"nirvaan\"}>Nirvaan</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Jinalaya\" required>\n                            <Select value={data.jinalayaId} onChange={v => { handleChange({ jinalayaId: v }) }} disabled={jinalayaId}>\n                                {\n                                    jinalayas.map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Tithi\" required>\n                            <Input placeholder=\"Tithi\" value={data.tithi} onChange={e => { handleChange({ tithi: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Jaap\" required>\n                            <Input.TextArea placeholder=\"Jaap\" value={data.jaap} onChange={e => { handleChange({ jaap: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm, bhagwanId }) => {\n    const [jinalayas, setJinalayas] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            jinalayaService.list({ isAll: 1, ln: 'hi', bhagwanId }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Select value={data.name} onChange={v => { handleChange({ name: v }) }} >\n                                <Select.Option value={\"chyavan\"}>च्यवन</Select.Option>\n                                <Select.Option value={\"janam\"}>जनम</Select.Option>\n                                <Select.Option value={\"diksha\"}>दीक्षा</Select.Option>\n                                <Select.Option value={\"kevalgyan\"}>केवलज्ञान</Select.Option>\n                                <Select.Option value={\"nirvaan\"}>निर्वाण</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Jinalaya\" required>\n                            <Select value={data.jinalayaId} disabled >\n                                {\n                                    jinalayas.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Tithi\" required>\n                            <Input placeholder=\"Tithi\" value={data.tithi} onChange={e => { handleChange({ tithi: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Jaap\" required>\n                            <Input.TextArea placeholder=\"Jaap\" value={data.jaap} onChange={e => { handleChange({ jaap: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm, bhagwanId }) => {\n    const [jinalayas, setJinalayas] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            jinalayaService.list({ isAll: 1, ln: 'gu', bhagwanId }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Select value={data.name} onChange={v => { handleChange({ name: v }) }} >\n                                <Select.Option value={\"chyavan\"}>ચ્યવન</Select.Option>\n                                <Select.Option value={\"janam\"}>જનમ</Select.Option>\n                                <Select.Option value={\"diksha\"}>દીક્ષા</Select.Option>\n                                <Select.Option value={\"kevalgyan\"}>કેવલજ્ઞાન</Select.Option>\n                                <Select.Option value={\"nirvaan\"}>નિર્વાણ</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Jinalaya\" required>\n                            <Select value={data.jinalayaId} disabled >\n                                {\n                                    jinalayas.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Tithi\" required>\n                            <Input placeholder=\"Tithi\" value={data.tithi} onChange={e => { handleChange({ tithi: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Jaap\" required>\n                            <Input.TextArea placeholder=\"Jaap\" value={data.jaap} onChange={e => { handleChange({ jaap: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Space, Select, DatePicker } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/bhagwan';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport commonObj from '../../commonObj';\nimport UploadImage from '../../utils/UploadImage';\nimport moment from 'moment';\nimport util from '../../utils/util';\nimport Kalyanak from './temple/Kalyanak';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function Bhagwan() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n    const kalyanakModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Kalyanak',\n            dataIndex: '_id',\n            width: 100,\n            render: value => (\n                <>\n                    <Button type=\"primary\" size=\"small\" onClick={() => { kalyanakModalRef.current.openForm({ _id: value }) }} >Kalyanak</Button>\n                </>\n            )\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this data?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.list(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Data</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n            <KalyanakModal ref={kalyanakModalRef} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected data?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n    const [fileList, setFileList] = useState([]);\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : {\n                        birth: {\n                            type: 'bc',\n                            bc: 100\n                        }\n                    }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data.parentId || data._id, { ln }).then(res => {\n            setData(res.data || {});\n            setFileList(res.data?.imgUrls || []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.save(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ _id: res.data._id });\n                if (ln === \"en\") {\n                    list();\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [ln, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setLn('en');\n            setFileList([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        handleChange({ imgUrls: fileList });\n    }, [fileList]);\n\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Data'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} destroyInactiveTabPane onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\n                                </Card>,\n                                disabled: !data._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\n                                </Card>,\n                                disabled: !data._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList, setFileList }} count={10} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Birth\" required>\n                            <Space>\n                                <Select style={{ width: \"80px\" }} value={data?.birth?.type}\n                                    onChange={v => { handleChange({ 'birth.type': v, 'birth.ad': moment(), 'birth.bc': null }) }} >\n                                    <Select.Option value=\"bc\">BC</Select.Option>\n                                    <Select.Option value=\"ad\">AD</Select.Option>\n                                </Select>\n                                {\n                                    data?.birth?.type === 'bc'\n                                        ? <Input placeholder=\"Ex - 200\" value={data?.birth?.bc}\n                                            onChange={e => { handleChange({ 'birth.bc': util.handleInteger(e.target.value) }) }} />\n                                        : <DatePicker\n                                            format={'DD MMM YYYY'} value={moment(data?.birth?.ad)}\n                                            onChange={(v) => { handleChange({ 'birth.ad': v }) }} allowClear={false} />\n                                }\n                            </Space>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList, setFileList }} count={10} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Birth\" required>\n                            <Space>\n                                <Select style={{ width: \"80px\" }} value={data?.birth?.type} disabled >\n                                    <Select.Option value=\"bc\">BC</Select.Option>\n                                    <Select.Option value=\"ad\">AD</Select.Option>\n                                </Select>\n                                {\n                                    data?.birth?.type === 'bc'\n                                        ? <Input placeholder=\"Ex - 200\" value={data?.birth?.bc} disabled />\n                                        : <DatePicker\n                                            format={'DD MMM YYYY'} value={moment(data?.birth?.ad)} disabled />\n                                }\n                            </Space>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList, setFileList }} count={10} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Birth\" required>\n                            <Space>\n                                <Select style={{ width: \"80px\" }} value={data?.birth?.type} disabled >\n                                    <Select.Option value=\"bc\">BC</Select.Option>\n                                    <Select.Option value=\"ad\">AD</Select.Option>\n                                </Select>\n                                {\n                                    data?.birth?.type === 'bc'\n                                        ? <Input placeholder=\"Ex - 200\" value={data?.birth?.bc} disabled />\n                                        : <DatePicker\n                                            format={'DD MMM YYYY'} value={moment(data?.birth?.ad)} disabled />\n                                }\n                            </Space>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\n\nconst KalyanakModal = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt);\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title=\"Kalyanak Details\"\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onCancel={() => { setOpen(false); }}\n                maskClosable={false}\n                width={1400}\n                destroyOnClose\n                className=\"app-modal-body-overflow\"\n                footer={null}\n            >\n                <Kalyanak {...{ bhagwanId: data._id }} />\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'location';\n\n    static detailState(id, data) {\n        return axios.get(this.baseURL + '/state/details/' + id, { params: data });\n    }\n    static listState(data) {\n        return axios.get(this.baseURL + '/state/list', { params: data });\n    }\n    static saveState(data, query) {\n        return axios.post(this.baseURL + \"/state/save\", data, { params: query });\n    }\n    static deleteState(id) {\n        return axios.post(this.baseURL + '/state/delete', { ids: id });\n    }\n\n    static detailDistrict(id, data) {\n        return axios.get(this.baseURL + '/district/details/' + id, { params: data });\n    }\n    static listDistrict(data) {\n        return axios.get(this.baseURL + '/district/list', { params: data });\n    }\n    static saveDistrict(data, query) {\n        return axios.post(this.baseURL + \"/district/save\", data, { params: query });\n    }\n    static deleteDistrict(id) {\n        return axios.post(this.baseURL + '/district/delete', { ids: id });\n    }\n\n    static detailCity(id, data) {\n        return axios.get(this.baseURL + '/city/details/' + id, { params: data });\n    }\n    static listCity(data) {\n        return axios.get(this.baseURL + '/city/list', { params: data });\n    }\n    static saveCity(data, query) {\n        return axios.post(this.baseURL + \"/city/save\", data, { params: query });\n    }\n    static deleteCity(id) {\n        return axios.post(this.baseURL + '/city/delete', { ids: id });\n    }\n\n}","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'shala';\n\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Divider, Radio, TimePicker, Checkbox, Tag, DatePicker, Space } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, MinusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport moment from \"moment\";\nimport service from '../../../services/shala';\nimport jinalayaService from '../../../services/jinalaya';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\nimport util from '../../../utils/util';\nimport UploadImage from '../../../utils/UploadImage';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function Shala({ type, jinalayaId = null }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, jinalayaId });\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Unique Code',\n            dataIndex: 'code',\n            width: 200,\n        },\n        {\n            title: 'Labharthi',\n            dataIndex: 'labharthi',\n            width: 200,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this city?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.list(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, jinalayaId }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Data</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, type, jinalayaId }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, jinalayaId }) {\n\n    const [jinalayas, setJinalayas] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            jinalayaService.list({ isAll: 1, ln: 'en' }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item>\n                        <Select placeholder=\"Jinalaya\" value={qData.jinalayaId} onChange={v => { setQData({ ...qData, jinalayaId: v }) }} allowClear disabled={jinalayaId} >\n                            {\n                                jinalayas.map(v => (\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                ))\n                            }\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected data?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, type, jinalayaId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n    const [fileList, setFileList] = useState([]);\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : {\n                        type: type,\n                        jinalayaId,\n                        timing: { type: 'custom' },\n                        contactDetails: [{}],\n                        status: true,\n                        parkingFacilities: [\n                            {\n                                type: 'rickshaw',\n                                available: true,\n                                remarks: ''\n                            },\n                            {\n                                type: 'car',\n                                available: true,\n                                remarks: ''\n                            },\n                            {\n                                type: 'bus',\n                                available: true,\n                                remarks: ''\n                            }\n                        ],\n                        distanceFrom: [\n                            {\n                                type: 'busStop',\n                                available: true,\n                                remarks: ''\n                            },\n                            {\n                                type: 'railway',\n                                available: true,\n                                remarks: ''\n                            },\n                            {\n                                type: 'airport',\n                                available: true,\n                                remarks: ''\n                            }\n                        ],\n                        restRoomFacility: [\n                            {\n                                type: 'male',\n                                bathroom: true,\n                                toilet: true,\n                                locker: true,\n                            },\n                            {\n                                type: 'female',\n                                bathroom: true,\n                                toilet: true,\n                                locker: true,\n                            }\n                        ],\n                        foundation: {\n                            type: 'ad',\n                            ad: moment()\n                        },\n                        dharmShalaExt: {\n                            acRoom: 0,\n                            nonAcRoom: 0,\n                            acHall: 0,\n                            nonAcHall: 0,\n                            totalFloor: 0,\n                            liftFacilities: true\n                        },\n                        pathShalaExt: {\n                            totalStudents: 0\n                        },\n                        ayambiShalaExt: {\n                            facilities: [\n                                {\n                                    type: '12Months',\n                                    available: true,\n                                },\n                                {\n                                    type: '4Months',\n                                    available: true,\n                                },\n                                {\n                                    type: 'only2oli',\n                                    available: true,\n                                }\n                            ]\n                        }\n                    }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data.parentId || data._id, { ln }).then(res => {\n            setData(res.data || {});\n            setFileList(res.data?.imgUrls || []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.save(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                if (ln === \"en\") {\n                    list();\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [ln, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setLn('en');\n            setFileList([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        handleChange({ imgUrls: fileList });\n    }, [fileList]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Data'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={1400}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm, fileList, setFileList, jinalayaId }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm, fileList, setFileList, jinalayaId }} />\n                                </Card>,\n                                disabled: !data._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm, fileList, setFileList, jinalayaId }} />\n                                </Card>,\n                                disabled: !data._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm, fileList, setFileList, jinalayaId }) => {\n\n    const [jinalayas, setJinalayas] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            jinalayaService.list({ isAll: 1, ln: 'en' }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Photos\">\n                            <UploadImage {...{ fileList, setFileList }} count={50} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Basic Details</Typography.Text></Divider>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Jinalaya\" required>\n                            <Select value={data.jinalayaId} onChange={v => { handleChange({ jinalayaId: v }) }} disabled={jinalayaId} >\n                                {\n                                    jinalayas.map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}></Col>\n                    <Col span={18}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Unique Code\" required>\n                            <Input placeholder=\"Unique Code\" value={data.code} onChange={e => { handleChange({ code: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Foundation Date\" required>\n                            <Space>\n                                <Select style={{ width: \"80px\" }} value={data?.foundation?.type}\n                                    onChange={v => { handleChange({ 'foundation.type': v, 'foundation.ad': moment(), 'foundation.bc': null }) }} >\n                                    <Select.Option value=\"bc\">BC</Select.Option>\n                                    <Select.Option value=\"ad\">AD</Select.Option>\n                                </Select>\n                                {\n                                    data?.foundation?.type === 'bc'\n                                        ? <Input placeholder=\"Ex - 200\" value={data?.foundation?.bc}\n                                            onChange={e => { handleChange({ 'foundation.bc': util.handleInteger(e.target.value) }) }} />\n                                        : <DatePicker\n                                            format={'DD MMM YYYY'} value={moment(data?.foundation?.ad)}\n                                            onChange={(v) => { handleChange({ 'foundation.ad': v }) }} allowClear={false} />\n                                }\n                            </Space>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={6}>\n                        <Form.Item label=\"Labharthi\" required>\n                            <Input placeholder=\"Labharthi\" value={data.labharthi} onChange={e => { handleChange({ labharthi: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Address</Typography.Text></Divider>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Address\" required>\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} rows={3} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={12}>\n                                <Form.Item label=\"Latitude\" required>\n                                    <Input placeholder=\"Latitude\" value={data?.location?.coordinates?.[0]} onChange={e => { handleChange({ [`location.coordinates.0`]: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"Longitude\" required>\n                                    <Input placeholder=\"Longitude\" value={data?.location?.coordinates?.[1]} onChange={e => { handleChange({ [`location.coordinates.1`]: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Button className=\"w-100\" type=\"primary\">Set Location</Button>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Divider orientation=\"left\" plain={true}></Divider>\n                    <Col span={11}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Contact Details</Typography.Text></Divider>\n                            </Col>\n                            {\n                                data.contactDetails?.map((v, i) => (\n                                    <React.Fragment key={i}>\n                                        <Col span={10}>\n                                            <Form.Item label=\"Name\" required>\n                                                <Input placeholder=\"Name\" value={v.name} onChange={e => { handleChange({ [`contactDetails.${i}.name`]: e.target.value }) }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={10}>\n                                            <Form.Item label=\"Number\" required>\n                                                <Input placeholder=\"Number\" value={v.number} onChange={e => { handleChange({ [`contactDetails.${i}.number`]: e.target.value }) }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={4}>\n                                            <Form.Item label=\" \" >\n                                                {\n                                                    i !== 0\n                                                        ? <Button type=\"primary\" danger shape=\"circle\" icon={<MinusOutlined />} onClick={() => {\n                                                            handleChange({ contactDetails: [...data.contactDetails.filter((vv, ii) => ii !== i)] });\n                                                        }} />\n                                                        : null\n                                                }\n                                                {\n                                                    i + 1 === data.contactDetails?.length\n                                                        ? <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} onClick={() => {\n                                                            handleChange({ contactDetails: [...data.contactDetails, {}] });\n                                                        }} />\n                                                        : null\n                                                }\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}></Col>\n                                    </React.Fragment>\n                                ))\n                            }\n\n\n                        </Row>\n                    </Col>\n                    <Col span={2} style={{ textAlign: \"center\" }}>\n                        <Divider type=\"vertical\" style={{ height: \"100%\" }}></Divider>\n                    </Col>\n                    <Col span={11}>\n                        <Row gutter={[12, 8]}>\n                            <Col span={24}>\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Timing</Typography.Text></Divider>\n                            </Col>\n                            <Col span={24}>\n                                <Radio.Group\n                                    options={[{ label: \"Custom\", value: 'custom' }, { label: \"All Day\", value: \"allDay\" }]}\n                                    optionType=\"button\"\n                                    buttonStyle=\"solid\"\n                                    value={data.timing?.type}\n                                    onChange={(e) => { handleChange({ 'timing.type': e.target.value, 'timing.custom': null, 'timing.allDay': null }); }}\n                                />\n                            </Col>\n                            <Col span={24}></Col>\n                            {\n                                data.timing?.type === 'custom'\n                                    ? <>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Morning\" required>\n                                                <TimePicker.RangePicker className=\"w-100\"\n                                                    value={data?.timing?.custom?.morning && [moment(data?.timing?.custom?.morning?.[0]), moment(data?.timing?.custom?.morning?.[1])]}\n                                                    onChange={(v) => { handleChange({ [`timing.custom.morning`]: v }); }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Afternoon\" required>\n                                                <TimePicker.RangePicker className=\"w-100\"\n                                                    value={data?.timing?.custom?.afternoon && [moment(data?.timing?.custom?.afternoon?.[0]), moment(data?.timing?.custom?.afternoon?.[1])]}\n                                                    onChange={(v) => { handleChange({ [`timing.custom.afternoon`]: v }); }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Evening\" required>\n                                                <TimePicker.RangePicker className=\"w-100\"\n                                                    value={data?.timing?.custom?.evening && [moment(data?.timing?.custom?.evening?.[0]), moment(data?.timing?.custom?.evening?.[1])]}\n                                                    onChange={(v) => { handleChange({ [`timing.custom.evening`]: v }); }} />\n                                            </Form.Item>\n                                        </Col>\n                                    </>\n                                    : <Col span={24}>\n                                        <Form.Item label=\"Choose\" required>\n                                            <TimePicker.RangePicker className=\"w-100\"\n                                                value={data?.timing?.allDay && [moment(data?.timing?.allDay?.[0]), moment(data?.timing?.allDay?.[1])]}\n                                                onChange={(v) => { handleChange({ [`timing.allDay`]: v }); }} />\n                                        </Form.Item>\n                                    </Col>\n                            }\n\n                        </Row>\n                    </Col>\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Parking Facilities</Typography.Text></Divider>\n                    </Col>\n\n\n\n                    {\n                        data.parkingFacilities?.map((v, i) => (\n                            <Col span={8} key={i}>\n                                <Form.Item label={\n                                    <Checkbox checked={data?.parkingFacilities?.[i]?.available}\n                                        onChange={e => {\n                                            handleChange({\n                                                [`parkingFacilities.${i}.available`]: e.target.checked,\n                                                [`parkingFacilities.${i}.remarks`]: ''\n                                            });\n                                        }}>\n                                        {\n                                            data?.parkingFacilities?.[i]?.type === 'rickshaw'\n                                                ? 'Rickshaw'\n                                                : data?.parkingFacilities?.[i]?.type === 'car'\n                                                    ? 'Car'\n                                                    : data?.parkingFacilities?.[i]?.type === 'bus'\n                                                        ? 'Bus'\n                                                        : null\n                                        }\n                                    </Checkbox>}>\n                                    {\n                                        +data?.parkingFacilities?.[i]?.available\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.parkingFacilities?.[i]?.remarks} onChange={e => { handleChange({ [`parkingFacilities.${i}.remarks`]: e.target.value }) }} />\n                                            : null\n                                    }\n\n                                </Form.Item>\n                            </Col>\n                        ))\n                    }\n\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rest Room Facilities</Typography.Text></Divider>\n                    </Col>\n\n                    {\n                        data.restRoomFacility?.map((v, i) => (\n                            <Col span={24} key={i}>\n                                <Card size=\"small\">\n                                    <Row gutter={[12, 2]}>\n                                        <Col span={6}>{v.type === 'male' ? 'Male' : v.type === 'female' ? 'Female' : null}</Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.bathroom} onChange={e => {\n                                                handleChange({\n                                                    [`restRoomFacility.${i}.bathroom`]: e.target.checked,\n                                                });\n                                            }}>Bathroom</Checkbox>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.toilet} onChange={e => {\n                                                handleChange({\n                                                    [`restRoomFacility.${i}.toilet`]: e.target.checked,\n                                                });\n                                            }}>Toilet</Checkbox>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.locker} onChange={e => {\n                                                handleChange({\n                                                    [`restRoomFacility.${i}.locker`]: e.target.checked,\n                                                });\n                                            }}>Bus</Checkbox>\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Col>\n                        ))\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Distance From</Typography.Text></Divider>\n                    </Col>\n                    {\n                        data.distanceFrom?.map((v, i) => (\n                            <Col span={8} key={i}>\n                                <Form.Item label={\n                                    <Checkbox checked={data?.distanceFrom?.[i]?.available}\n                                        onChange={e => {\n                                            handleChange({\n                                                [`distanceFrom.${i}.available`]: e.target.checked,\n                                                [`distanceFrom.${i}.remarks`]: ''\n                                            });\n                                        }}>\n                                        {\n                                            data?.distanceFrom?.[i]?.type === 'busStop'\n                                                ? 'Main Busstop'\n                                                : data?.distanceFrom?.[i]?.type === 'railway'\n                                                    ? 'Main Railway Station'\n                                                    : data?.distanceFrom?.[i]?.type === 'airport'\n                                                        ? 'Neares Airport'\n                                                        : null\n                                        }\n                                    </Checkbox>}>\n                                    {\n                                        +data?.distanceFrom?.[i]?.available\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.distanceFrom?.[i]?.remarks} onChange={e => { handleChange({ [`distanceFrom.${i}.remarks`]: e.target.value }) }} />\n                                            : null\n                                    }\n\n                                </Form.Item>\n                            </Col>\n                        ))\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}></Divider>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label={<Checkbox checked={data.upashray?.available} onChange={e => { handleChange({ [`upashray.available`]: e.target.checked }); }}>Upashray</Checkbox>}>\n                            {\n                                data.upashray?.available\n                                    ? <Input type=\"text\" placeholder=\"Number\" value={data.upashray.value} onChange={e => { handleChange({ [`upashray.value`]: util.handleInteger(e.target.value) }); }} />\n                                    : null\n                            }\n\n                        </Form.Item>\n                    </Col>\n\n                    {\n                        data.type === 'dharmShala'\n                            ? <>\n                                <Col span={24}>\n                                    <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rooms and Halls</Typography.Text></Divider>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Ac Room\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\n                                            value={data.dharmShalaExt?.acRoom}\n                                            onChange={e => { handleChange({ 'dharmShalaExt.acRoom': util.handleInteger(e.target.value) }); }}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Non Ac Room\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\n                                            value={data.dharmShalaExt?.nonAcRoom}\n                                            onChange={e => { handleChange({ 'dharmShalaExt.nonAcRoom': util.handleInteger(e.target.value) }); }}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Ac Hall\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\n                                            value={data.dharmShalaExt?.acHall}\n                                            onChange={e => { handleChange({ 'dharmShalaExt.acHall': util.handleInteger(e.target.value) }); }}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Non Ac Hall\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\n                                            value={data.dharmShalaExt?.nonAcHall}\n                                            onChange={e => { handleChange({ 'dharmShalaExt.nonAcHall': util.handleInteger(e.target.value) }); }}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Total Floor\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\n                                            value={data?.dharmShalaExt?.totalFloor}\n                                            onChange={e => { handleChange({ 'dharmShalaExt.totalFloor': util.handleInteger(e.target.value) }); }}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Lift Facilities Availability \">\n                                        <Checkbox checked={data?.dharmShalaExt?.liftFacilities}\n                                            onChange={e => {\n                                                handleChange({\n                                                    [`dharmShalaExt.liftFacilities`]: e.target.checked,\n                                                });\n                                            }}>\n                                            Lift Facilities\n                                        </Checkbox>\n                                    </Form.Item>\n                                </Col>\n                            </>\n                            : null\n                    }\n                    {\n                        data.type === 'pathShala'\n                            ? <>\n                                <Col span={24}></Col>\n                                <Col span={8}>\n                                    <Form.Item label=\"Number of students\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\n                                            value={data.pathShalaExt?.totalStudents}\n                                            onChange={e => { handleChange({ 'pathShalaExt.totalStudents': util.handleInteger(e.target.value) }); }}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={24}></Col>\n                            </>\n                            : null\n                    }\n                    {\n                        data.type === 'ayambiShala'\n                            ? <>\n                                <Col span={24}>\n                                    <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Ayambi Facilities</Typography.Text></Divider>\n                                </Col>\n                                {\n                                    data?.ayambiShalaExt?.facilities?.map((v, i) => (\n                                        <Col span={8} key={i}>\n                                            <Form.Item label={\n                                                <Checkbox checked={v?.available}\n                                                    onChange={e => {\n                                                        handleChange({\n                                                            [`ayambiShalaExt.facilities.${i}.available`]: e.target.checked,\n                                                        });\n                                                    }}>\n                                                    {\n                                                        v?.type === '12Months'\n                                                            ? '12 Months'\n                                                            : v?.type === '4Months'\n                                                                ? '4 Months'\n                                                                : v?.type === 'only2oli'\n                                                                    ? 'Only 2 Oli'\n                                                                    : null\n                                                    }\n                                                </Checkbox>}>\n                                            </Form.Item>\n                                        </Col>\n                                    ))\n                                }\n                            </>\n                            : null\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Others Details</Typography.Text></Divider>\n                    </Col>\n\n                    <Col span={24}>\n                        <Form.Item label=\"History\">\n                            <Input.TextArea type=\"text\" placeholder=\"History\" rows={10}\n                                value={data.historyDetails}\n                                onChange={e => { handleChange({ historyDetails: e.target.value }); }}\n                            />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={6}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\n                                <Select.Option value={true}>Active</Select.Option>\n                                <Select.Option value={false}>Inactive</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={24}></Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\n    const [jinalayas, setJinalayas] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            jinalayaService.list({ isAll: 1, ln: 'hi' }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Photos\">\n                            <UploadImage {...{ fileList, setFileList }} count={50} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Basic Details</Typography.Text></Divider>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Jinalaya\" required>\n                            <Select value={data.jinalayaId} disabled >\n                                {\n                                    jinalayas.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}></Col>\n                    <Col span={18}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Unique Code\" required>\n                            <Input placeholder=\"Unique Code\" value={data.code} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Foundation Date\" required>\n                            <Space>\n                                <Select style={{ width: \"80px\" }} value={data?.foundation?.type} disabled >\n                                    <Select.Option value=\"bc\">BC</Select.Option>\n                                    <Select.Option value=\"ad\">AD</Select.Option>\n                                </Select>\n                                {\n                                    data?.foundation?.type === 'bc'\n                                        ? <Input placeholder=\"Ex - 200\" value={data?.foundation?.bc} disabled />\n                                        : <DatePicker format={'DD MMM YYYY'} value={moment(data?.foundation?.ad)} disabled />\n                                }\n                            </Space>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={6}>\n                        <Form.Item label=\"Labharthi\" required>\n                            <Input placeholder=\"Labharthi\" value={data.labharthi} onChange={e => { handleChange({ labharthi: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Address</Typography.Text></Divider>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Address\" required>\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} rows={3} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={12}>\n                                <Form.Item label=\"Latitude\" required>\n                                    <Input placeholder=\"Latitude\" value={data?.location?.coordinates?.[0]} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"Longitude\" required>\n                                    <Input placeholder=\"Longitude\" value={data?.location?.coordinates?.[1]} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Button className=\"w-100\" type=\"primary\" disabled>Set Location</Button>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Divider orientation=\"left\" plain={true}></Divider>\n                    <Col span={11}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Contact Details</Typography.Text></Divider>\n                            </Col>\n                            {\n                                data.contactDetails?.map((v, i) => (\n                                    <React.Fragment key={i}>\n                                        <Col span={10}>\n                                            <Form.Item label=\"Name\" required>\n                                                <Input placeholder=\"Name\" value={v.name} onChange={e => { handleChange({ [`contactDetails.${i}.name`]: e.target.value }) }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={10}>\n                                            <Form.Item label=\"Number\" required>\n                                                <Input placeholder=\"Number\" value={v.number} onChange={e => { handleChange({ [`contactDetails.${i}.number`]: e.target.value }) }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}></Col>\n                                    </React.Fragment>\n                                ))\n                            }\n\n\n                        </Row>\n                    </Col>\n                    <Col span={2} style={{ textAlign: \"center\" }}>\n                        <Divider type=\"vertical\" style={{ height: \"100%\" }}></Divider>\n                    </Col>\n                    <Col span={11}>\n                        <Row gutter={[12, 8]}>\n                            <Col span={24}>\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Timing</Typography.Text></Divider>\n                            </Col>\n                            <Col span={24}>\n                                <Radio.Group\n                                    options={[{ label: \"Custom\", value: 'custom' }, { label: \"All Day\", value: \"allDay\" }]}\n                                    optionType=\"button\"\n                                    buttonStyle=\"solid\"\n                                    value={data.timing?.type}\n                                    disabled\n                                />\n                            </Col>\n                            <Col span={24}></Col>\n                            {\n                                data.timing?.type === 'custom'\n                                    ? <>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Morning\" required>\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\n                                                    value={data?.timing?.custom?.morning && [moment(data?.timing?.custom?.morning?.[0]), moment(data?.timing?.custom?.morning?.[1])]} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Afternoon\" required>\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\n                                                    value={data?.timing?.custom?.afternoon && [moment(data?.timing?.custom?.afternoon?.[0]), moment(data?.timing?.custom?.afternoon?.[1])]} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Evening\" required>\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\n                                                    value={data?.timing?.custom?.evening && [moment(data?.timing?.custom?.evening?.[0]), moment(data?.timing?.custom?.evening?.[1])]} />\n                                            </Form.Item>\n                                        </Col>\n                                    </>\n                                    : <Col span={24}>\n                                        <Form.Item label=\"Choose\" required>\n                                            <TimePicker.RangePicker className=\"w-100\" disabled\n                                                value={data?.timing?.allDay && [moment(data?.timing?.allDay?.[0]), moment(data?.timing?.allDay?.[1])]} />\n                                        </Form.Item>\n                                    </Col>\n                            }\n\n                        </Row>\n                    </Col>\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Parking Facilities</Typography.Text></Divider>\n                    </Col>\n\n\n\n                    {\n                        data.parkingFacilities?.map((v, i) => (\n                            <Col span={8} key={i}>\n                                <Form.Item label={\n                                    <Checkbox checked={data?.parkingFacilities?.[i]?.available} disabled>\n                                        {\n                                            data?.parkingFacilities?.[i]?.type === 'rickshaw'\n                                                ? 'Rickshaw'\n                                                : data?.parkingFacilities?.[i]?.type === 'car'\n                                                    ? 'Car'\n                                                    : data?.parkingFacilities?.[i]?.type === 'bus'\n                                                        ? 'Bus'\n                                                        : null\n                                        }\n                                    </Checkbox>}>\n                                    {\n                                        +data?.parkingFacilities?.[i]?.available\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.parkingFacilities?.[i]?.remarks} onChange={e => { handleChange({ [`parkingFacilities.${i}.remarks`]: e.target.value }) }} />\n                                            : null\n                                    }\n\n                                </Form.Item>\n                            </Col>\n                        ))\n                    }\n\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rest Room Facilities</Typography.Text></Divider>\n                    </Col>\n\n                    {\n                        data.restRoomFacility?.map((v, i) => (\n                            <Col span={24} key={i}>\n                                <Card size=\"small\">\n                                    <Row gutter={[12, 2]}>\n                                        <Col span={6}>{v.type === 'male' ? 'Male' : v.type === 'female' ? 'Female' : null}</Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.bathroom} disabled>Bathroom</Checkbox>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.toilet} disabled>Toilet</Checkbox>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.locker} disabled>Bus</Checkbox>\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Col>\n                        ))\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Distance From</Typography.Text></Divider>\n                    </Col>\n                    {\n                        data.distanceFrom?.map((v, i) => (\n                            <Col span={8} key={i}>\n                                <Form.Item label={\n                                    <Checkbox checked={data?.distanceFrom?.[i]?.available} disabled>\n                                        {\n                                            data?.distanceFrom?.[i]?.type === 'busStop'\n                                                ? 'Main Busstop'\n                                                : data?.distanceFrom?.[i]?.type === 'railway'\n                                                    ? 'Main Railway Station'\n                                                    : data?.distanceFrom?.[i]?.type === 'airport'\n                                                        ? 'Neares Airport'\n                                                        : null\n                                        }\n                                    </Checkbox>}>\n                                    {\n                                        +data?.distanceFrom?.[i]?.available\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.distanceFrom?.[i]?.remarks} onChange={e => { handleChange({ [`distanceFrom.${i}.remarks`]: e.target.value }) }} />\n                                            : null\n                                    }\n\n                                </Form.Item>\n                            </Col>\n                        ))\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}></Divider>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label={<Checkbox checked={data.upashray?.available} disabled>Upashray</Checkbox>}>\n                            {\n                                data.upashray?.available\n                                    ? <Input type=\"text\" placeholder=\"Number\" value={data.upashray.value} disabled />\n                                    : null\n                            }\n\n                        </Form.Item>\n                    </Col>\n\n\n                    {\n                        data.type === 'dharmShala'\n                            ? <>\n                                <Col span={24}>\n                                    <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rooms and Halls</Typography.Text></Divider>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Ac Room\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\n                                            value={data.dharmShalaExt?.acRoom}\n                                            disabled\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Non Ac Room\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\n                                            value={data.dharmShalaExt?.nonAcRoom}\n                                            disabled\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Ac Hall\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\n                                            value={data.dharmShalaExt?.acHall}\n                                            disabled\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Non Ac Hall\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\n                                            value={data.dharmShalaExt?.nonAcHall}\n                                            disabled\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Total Floor\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\n                                            value={data?.dharmShalaExt?.totalFloor}\n                                            disabled\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Lift Facilities Availability \">\n                                        <Checkbox checked={data?.dharmShalaExt?.liftFacilities}\n                                            disabled>\n                                            Lift Facilities\n                                        </Checkbox>\n                                    </Form.Item>\n                                </Col>\n                            </>\n                            : null\n                    }\n                    {\n                        data.type === 'pathShala'\n                            ? <>\n                                <Col span={24}></Col>\n                                <Col span={8}>\n                                    <Form.Item label=\"Number of students\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\n                                            value={data.pathShalaExt?.totalStudents}\n                                            disabled\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={24}></Col>\n                            </>\n                            : null\n                    }\n                    {\n                        data.type === 'ayambiShala'\n                            ? <>\n                                <Col span={24}>\n                                    <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Ayambi Facilities</Typography.Text></Divider>\n                                </Col>\n                                {\n                                    data?.ayambiShalaExt?.facilities?.map((v, i) => (\n                                        <Col span={8} key={i}>\n                                            <Form.Item label={\n                                                <Checkbox checked={v?.available} disabled>\n                                                    {\n                                                        v?.type === '12Months'\n                                                            ? '12 Months'\n                                                            : v?.type === '4Months'\n                                                                ? '4 Months'\n                                                                : v?.type === 'only2oli'\n                                                                    ? 'Only 2 Oli'\n                                                                    : null\n                                                    }\n                                                </Checkbox>}>\n                                            </Form.Item>\n                                        </Col>\n                                    ))\n                                }\n                            </>\n                            : null\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Others Details</Typography.Text></Divider>\n                    </Col>\n\n                    <Col span={24}>\n                        <Form.Item label=\"History\">\n                            <Input.TextArea type=\"text\" placeholder=\"Remarks\" rows={10}\n                                value={data.historyDetails}\n                                onChange={e => { handleChange({ historyDetails: e.target.value }); }}\n                            />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={6}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} disabled >\n                                <Select.Option value={true}>Active</Select.Option>\n                                <Select.Option value={false}>Inactive</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={24}></Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\n    const [jinalayas, setJinalayas] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            jinalayaService.list({ isAll: 1, ln: 'gu' }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Photos\">\n                            <UploadImage {...{ fileList, setFileList }} count={50} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Basic Details</Typography.Text></Divider>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Jinalaya\" required>\n                            <Select value={data.jinalayaId} disabled >\n                                {\n                                    jinalayas.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}></Col>\n                    <Col span={18}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Unique Code\" required>\n                            <Input placeholder=\"Unique Code\" value={data.code} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Foundation Date\" required>\n                            <Space>\n                                <Select style={{ width: \"80px\" }} value={data?.foundation?.type} disabled >\n                                    <Select.Option value=\"bc\">BC</Select.Option>\n                                    <Select.Option value=\"ad\">AD</Select.Option>\n                                </Select>\n                                {\n                                    data?.foundation?.type === 'bc'\n                                        ? <Input placeholder=\"Ex - 200\" value={data?.foundation?.bc} disabled />\n                                        : <DatePicker format={'DD MMM YYYY'} value={moment(data?.foundation?.ad)} disabled />\n                                }\n                            </Space>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={6}>\n                        <Form.Item label=\"Labharthi\" required>\n                            <Input placeholder=\"Labharthi\" value={data.labharthi} onChange={e => { handleChange({ labharthi: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Address</Typography.Text></Divider>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Address\" required>\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} rows={3} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={12}>\n                                <Form.Item label=\"Latitude\" required>\n                                    <Input placeholder=\"Latitude\" value={data?.location?.coordinates?.[0]} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"Longitude\" required>\n                                    <Input placeholder=\"Longitude\" value={data?.location?.coordinates?.[1]} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Button className=\"w-100\" type=\"primary\" disabled>Set Location</Button>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Divider orientation=\"left\" plain={true}></Divider>\n                    <Col span={11}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Contact Details</Typography.Text></Divider>\n                            </Col>\n                            {\n                                data.contactDetails?.map((v, i) => (\n                                    <React.Fragment key={i}>\n                                        <Col span={10}>\n                                            <Form.Item label=\"Name\" required>\n                                                <Input placeholder=\"Name\" value={v.name} onChange={e => { handleChange({ [`contactDetails.${i}.name`]: e.target.value }) }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={10}>\n                                            <Form.Item label=\"Number\" required>\n                                                <Input placeholder=\"Number\" value={v.number} onChange={e => { handleChange({ [`contactDetails.${i}.number`]: e.target.value }) }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}></Col>\n                                    </React.Fragment>\n                                ))\n                            }\n\n\n                        </Row>\n                    </Col>\n                    <Col span={2} style={{ textAlign: \"center\" }}>\n                        <Divider type=\"vertical\" style={{ height: \"100%\" }}></Divider>\n                    </Col>\n                    <Col span={11}>\n                        <Row gutter={[12, 8]}>\n                            <Col span={24}>\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Timing</Typography.Text></Divider>\n                            </Col>\n                            <Col span={24}>\n                                <Radio.Group\n                                    options={[{ label: \"Custom\", value: 'custom' }, { label: \"All Day\", value: \"allDay\" }]}\n                                    optionType=\"button\"\n                                    buttonStyle=\"solid\"\n                                    value={data.timing?.type}\n                                    disabled\n                                />\n                            </Col>\n                            <Col span={24}></Col>\n                            {\n                                data.timing?.type === 'custom'\n                                    ? <>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Morning\" required>\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\n                                                    value={data?.timing?.custom?.morning && [moment(data?.timing?.custom?.morning?.[0]), moment(data?.timing?.custom?.morning?.[1])]} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Afternoon\" required>\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\n                                                    value={data?.timing?.custom?.afternoon && [moment(data?.timing?.custom?.afternoon?.[0]), moment(data?.timing?.custom?.afternoon?.[1])]} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Evening\" required>\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\n                                                    value={data?.timing?.custom?.evening && [moment(data?.timing?.custom?.evening?.[0]), moment(data?.timing?.custom?.evening?.[1])]} />\n                                            </Form.Item>\n                                        </Col>\n                                    </>\n                                    : <Col span={24}>\n                                        <Form.Item label=\"Choose\" required>\n                                            <TimePicker.RangePicker className=\"w-100\" disabled\n                                                value={data?.timing?.allDay && [moment(data?.timing?.allDay?.[0]), moment(data?.timing?.allDay?.[1])]} />\n                                        </Form.Item>\n                                    </Col>\n                            }\n\n                        </Row>\n                    </Col>\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Parking Facilities</Typography.Text></Divider>\n                    </Col>\n\n\n\n                    {\n                        data.parkingFacilities?.map((v, i) => (\n                            <Col span={8} key={i}>\n                                <Form.Item label={\n                                    <Checkbox checked={data?.parkingFacilities?.[i]?.available} disabled>\n                                        {\n                                            data?.parkingFacilities?.[i]?.type === 'rickshaw'\n                                                ? 'Rickshaw'\n                                                : data?.parkingFacilities?.[i]?.type === 'car'\n                                                    ? 'Car'\n                                                    : data?.parkingFacilities?.[i]?.type === 'bus'\n                                                        ? 'Bus'\n                                                        : null\n                                        }\n                                    </Checkbox>}>\n                                    {\n                                        +data?.parkingFacilities?.[i]?.available\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.parkingFacilities?.[i]?.remarks} onChange={e => { handleChange({ [`parkingFacilities.${i}.remarks`]: e.target.value }) }} />\n                                            : null\n                                    }\n\n                                </Form.Item>\n                            </Col>\n                        ))\n                    }\n\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rest Room Facilities</Typography.Text></Divider>\n                    </Col>\n\n                    {\n                        data.restRoomFacility?.map((v, i) => (\n                            <Col span={24} key={i}>\n                                <Card size=\"small\">\n                                    <Row gutter={[12, 2]}>\n                                        <Col span={6}>{v.type === 'male' ? 'Male' : v.type === 'female' ? 'Female' : null}</Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.bathroom} disabled>Bathroom</Checkbox>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.toilet} disabled>Toilet</Checkbox>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.locker} disabled>Bus</Checkbox>\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Col>\n                        ))\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Distance From</Typography.Text></Divider>\n                    </Col>\n                    {\n                        data.distanceFrom?.map((v, i) => (\n                            <Col span={8} key={i}>\n                                <Form.Item label={\n                                    <Checkbox checked={data?.distanceFrom?.[i]?.available} disabled>\n                                        {\n                                            data?.distanceFrom?.[i]?.type === 'busStop'\n                                                ? 'Main Busstop'\n                                                : data?.distanceFrom?.[i]?.type === 'railway'\n                                                    ? 'Main Railway Station'\n                                                    : data?.distanceFrom?.[i]?.type === 'airport'\n                                                        ? 'Neares Airport'\n                                                        : null\n                                        }\n                                    </Checkbox>}>\n                                    {\n                                        +data?.distanceFrom?.[i]?.available\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.distanceFrom?.[i]?.remarks} onChange={e => { handleChange({ [`distanceFrom.${i}.remarks`]: e.target.value }) }} />\n                                            : null\n                                    }\n\n                                </Form.Item>\n                            </Col>\n                        ))\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}></Divider>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label={<Checkbox checked={data.upashray?.available} disabled>Upashray</Checkbox>}>\n                            {\n                                data.upashray?.available\n                                    ? <Input type=\"text\" placeholder=\"Number\" value={data.upashray.value} disabled />\n                                    : null\n                            }\n\n                        </Form.Item>\n                    </Col>\n\n                    {\n                        data.type === 'dharmShala'\n                            ? <>\n                                <Col span={24}>\n                                    <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rooms and Halls</Typography.Text></Divider>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Ac Room\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\n                                            value={data.dharmShalaExt?.acRoom}\n                                            disabled\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Non Ac Room\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\n                                            value={data.dharmShalaExt?.nonAcRoom}\n                                            disabled\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Ac Hall\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\n                                            value={data.dharmShalaExt?.acHall}\n                                            disabled\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Non Ac Hall\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\n                                            value={data.dharmShalaExt?.nonAcHall}\n                                            disabled\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Total Floor\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\n                                            value={data?.dharmShalaExt?.totalFloor}\n                                            disabled\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={6}>\n                                    <Form.Item label=\"Lift Facilities Availability \">\n                                        <Checkbox checked={data?.dharmShalaExt?.liftFacilities}\n                                            disabled>\n                                            Lift Facilities\n                                        </Checkbox>\n                                    </Form.Item>\n                                </Col>\n                            </>\n                            : null\n                    }\n                    {\n                        data.type === 'pathShala'\n                            ? <>\n                                <Col span={24}></Col>\n                                <Col span={8}>\n                                    <Form.Item label=\"Number of students\">\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\n                                            value={data.pathShalaExt?.totalStudents}\n                                            disabled\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={24}></Col>\n                            </>\n                            : null\n                    }\n                    {\n                        data.type === 'ayambiShala'\n                            ? <>\n                                <Col span={24}>\n                                    <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Ayambi Facilities</Typography.Text></Divider>\n                                </Col>\n                                {\n                                    data?.ayambiShalaExt?.facilities?.map((v, i) => (\n                                        <Col span={8} key={i}>\n                                            <Form.Item label={\n                                                <Checkbox checked={v?.available} disabled>\n                                                    {\n                                                        v?.type === '12Months'\n                                                            ? '12 Months'\n                                                            : v?.type === '4Months'\n                                                                ? '4 Months'\n                                                                : v?.type === 'only2oli'\n                                                                    ? 'Only 2 Oli'\n                                                                    : null\n                                                    }\n                                                </Checkbox>}>\n                                            </Form.Item>\n                                        </Col>\n                                    ))\n                                }\n                            </>\n                            : null\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Others Details</Typography.Text></Divider>\n                    </Col>\n\n                    <Col span={24}>\n                        <Form.Item label=\"History\">\n                            <Input.TextArea type=\"text\" placeholder=\"Remarks\" rows={10}\n                                value={data.historyDetails}\n                                onChange={e => { handleChange({ historyDetails: e.target.value }); }}\n                            />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={6}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} disabled >\n                                <Select.Option value={true}>Active</Select.Option>\n                                <Select.Option value={false}>Inactive</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={24}></Col>\n                </Row>\n            </Form>\n        </>\n    );\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Divider, Radio, TimePicker, Checkbox, Tag, DatePicker, Space } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, MinusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport moment from \"moment\";\nimport service from '../../../services/jinalaya';\nimport locationService from '../../../services/location';\nimport bhagwanService from '../../../services/bhagwan';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\nimport util from '../../../utils/util';\nimport UploadImage from '../../../utils/UploadImage';\nimport Shala from './Shala';\nimport Kalyanak from './Kalyanak';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function Jinalaya() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n    const shalaModalRef = useRef();\n    const kalyanakModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Shalas',\n            dataIndex: '_id',\n            width: 450,\n            render: value => (\n                <>\n                    <Row gutter={10}>\n                        <Col>\n                            <Button type=\"primary\" size=\"small\" onClick={() => { shalaModalRef.current.openForm({ type: 'dharmShala', _id: value }) }} >Dharm Shala</Button>\n                        </Col>\n                        <Col>\n                            <Button type=\"dashed\" size=\"small\" onClick={() => { shalaModalRef.current.openForm({ type: 'bhojanShala', _id: value }) }} >Bhojan Shala</Button>\n                        </Col>\n                        <Col>\n                            <Button type=\"danger\" size=\"small\" onClick={() => { shalaModalRef.current.openForm({ type: 'pathShala', _id: value }) }} >Path Shala</Button>\n                        </Col>\n                        <Col>\n                            <Button type=\"default\" size=\"small\" onClick={() => { shalaModalRef.current.openForm({ type: 'ayambiShala', _id: value }) }} >Ayambi Shala</Button>\n                        </Col>\n                    </Row>\n                </>\n            )\n        },\n        {\n            title: 'Kalyanak',\n            dataIndex: '_id',\n            width: 100,\n            render: value => (\n                <>\n                    <Button type=\"primary\" size=\"small\" onClick={() => { kalyanakModalRef.current.openForm({ _id: value }) }} >Kalyanak</Button>\n                </>\n            )\n        },\n        {\n            title: 'Unique Code',\n            dataIndex: 'code',\n            width: 100,\n        },\n        {\n            title: 'Parshvanath',\n            dataIndex: 'isParshvanath',\n            width: 100,\n            render: v => {\n                if (v) {\n                    return <Tag color='green'>Yes</Tag>\n                } else {\n                    return <Tag color='red'>No</Tag>\n                }\n            },\n        },\n        {\n            title: '24 T. Jinalaya',\n            dataIndex: 'is24TirthankarJinalaya',\n            width: 120,\n            render: v => {\n                if (v) {\n                    return <Tag color='green'>Yes</Tag>\n                } else {\n                    return <Tag color='red'>No</Tag>\n                }\n            },\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this city?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.list(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Jinalayas</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n            <ShalaModal ref={shalaModalRef} />\n            <KalyanakModal ref={kalyanakModalRef} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    const [bhagwan, setBhagwan] = useState([]);\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    // const [cities, setCities] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            bhagwanService.list({ isAll: 1, ln: 'en' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan data not loaded', 'error'); });\n            locationService.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            // locationService.listCity({ isAll: 1, ln: 'en' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item>\n                        <Select placeholder=\"Mulnayak\" value={qData.bhagwanId} onChange={v => { setQData({ ...qData, bhagwanId: v }) }} allowClear >\n                            {\n                                bhagwan.map(v => (\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                ))\n                            }\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item>\n                        <Select placeholder=\"State\" value={qData.stateId} onChange={v => { setQData({ ...qData, stateId: v, districtId: null }) }} allowClear >\n                            {\n                                states.map(v => (\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                ))\n                            }\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item>\n                        <Select placeholder=\"District\" value={qData.districtId} onChange={v => { setQData({ ...qData, districtId: v }) }} allowClear >\n                            {\n                                districts.filter(v => v.stateId === qData.stateId).map(v => (\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                ))\n                            }\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected jinalayas?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n    const [fileList, setFileList] = useState([]);\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : {\n                        timing: { type: 'custom' },\n                        contactDetails: [{}],\n                        status: true,\n                        parkingFacilities: [\n                            {\n                                type: 'rickshaw',\n                                available: true,\n                                remarks: ''\n                            },\n                            {\n                                type: 'car',\n                                available: true,\n                                remarks: ''\n                            },\n                            {\n                                type: 'bus',\n                                available: true,\n                                remarks: ''\n                            }\n                        ],\n                        distanceFrom: [\n                            {\n                                type: 'busStop',\n                                available: true,\n                                remarks: ''\n                            },\n                            {\n                                type: 'railway',\n                                available: true,\n                                remarks: ''\n                            },\n                            {\n                                type: 'airport',\n                                available: true,\n                                remarks: ''\n                            }\n                        ],\n                        restRoomFacility: [\n                            {\n                                type: 'male',\n                                bathroom: true,\n                                toilet: true,\n                                locker: true,\n                            },\n                            {\n                                type: 'female',\n                                bathroom: true,\n                                toilet: true,\n                                locker: true,\n                            }\n                        ],\n                        foundation: {\n                            type: 'ad',\n                            ad: moment()\n                        }\n                    }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data.parentId || data._id, { ln }).then(res => {\n            setData(res.data || {});\n            setFileList(res.data?.imgUrls || []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.save(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                if (ln === \"en\") {\n                    list();\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [ln, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setLn('en');\n            setFileList([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        handleChange({ imgUrls: fileList });\n    }, [fileList]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Jinalaya'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={1400}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\n                                </Card>,\n                                disabled: !data._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\n                                </Card>,\n                                disabled: !data._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\n\n    const [bhagwan, setBhagwan] = useState([]);\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [cities, setCities] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            bhagwanService.list({ isAll: 1, ln: 'en' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan data not loaded', 'error'); });\n            locationService.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            locationService.listCity({ isAll: 1, ln: 'en' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Jinalaya's Photo\">\n                            <UploadImage {...{ fileList, setFileList }} count={50} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Basic Details</Typography.Text></Divider>\n                    </Col>\n                    <Col span={18}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Unique Code\" required>\n                            <Input placeholder=\"Unique Code\" value={data.code} onChange={e => { handleChange({ code: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Foundation Date\" required>\n                            <Space>\n                                <Select style={{ width: \"80px\" }} value={data?.foundation?.type}\n                                    onChange={v => { handleChange({ 'foundation.type': v, 'foundation.ad': moment(), 'foundation.bc': null }) }} >\n                                    <Select.Option value=\"bc\">BC</Select.Option>\n                                    <Select.Option value=\"ad\">AD</Select.Option>\n                                </Select>\n                                {\n                                    data?.foundation?.type === 'bc'\n                                        ? <Input placeholder=\"Ex - 200\" value={data?.foundation?.bc}\n                                            onChange={e => { handleChange({ 'foundation.bc': util.handleInteger(e.target.value) }) }} />\n                                        : <DatePicker\n                                            format={'DD MMM YYYY'} value={moment(data?.foundation?.ad)}\n                                            onChange={(v) => { handleChange({ 'foundation.ad': v }) }} allowClear={false} />\n                                }\n                            </Space>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Mulnayak\" required>\n                            <Select value={data.bhagwanId} onChange={v => { handleChange({ bhagwanId: v }) }} >\n                                {\n                                    bhagwan.map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Pratisthacharya Name\" required>\n                            <Input placeholder=\"Pratisthacharya Name\" value={data.pratisthacharya} onChange={e => { handleChange({ pratisthacharya: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Dhwaja Labharthi\" required>\n                            <Input placeholder=\"Dhwaja Labharthi\" value={data.dhwajaLabharthi} onChange={e => { handleChange({ dhwajaLabharthi: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Jinalaya Included In</Typography.Text></Divider>\n                    </Col>\n                    <Col span={8}>\n                        <Checkbox checked={data.isParshvanath} onChange={e => { handleChange({ isParshvanath: e.target.checked }) }}>108 Parshwanath</Checkbox>\n                    </Col>\n                    <Col span={8}>\n                        <Checkbox checked={data.is24TirthankarJinalaya} onChange={e => { handleChange({ is24TirthankarJinalaya: e.target.checked }) }}>24 Tirthankar Jinalaya</Checkbox>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Address</Typography.Text></Divider>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} onChange={v => { handleChange({ stateId: v, districtId: null, cityId: null }) }} >\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"District\" required>\n                            <Select value={data.districtId} onChange={v => { handleChange({ districtId: v, cityId: null }) }} >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"City\" required>\n                            <Select value={data.cityId} onChange={v => { handleChange({ cityId: v }) }} >\n                                {\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Pin Code\" required>\n                            <Input placeholder=\"Pin Code\" value={data.pincode} onChange={e => { handleChange({ pincode: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Address\" required>\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} rows={3} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={12}>\n                                <Form.Item label=\"Latitude\" required>\n                                    <Input placeholder=\"Latitude\" value={data?.location?.coordinates?.[0]} onChange={e => { handleChange({ [`location.coordinates.0`]: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"Longitude\" required>\n                                    <Input placeholder=\"Longitude\" value={data?.location?.coordinates?.[1]} onChange={e => { handleChange({ [`location.coordinates.1`]: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Button className=\"w-100\" type=\"primary\">Set Location</Button>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Divider orientation=\"left\" plain={true}></Divider>\n                    <Col span={11}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Contact Details</Typography.Text></Divider>\n                            </Col>\n                            {\n                                data.contactDetails?.map((v, i) => (\n                                    <React.Fragment key={i}>\n                                        <Col span={10}>\n                                            <Form.Item label=\"Name\" required>\n                                                <Input placeholder=\"Name\" value={v.name} onChange={e => { handleChange({ [`contactDetails.${i}.name`]: e.target.value }) }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={10}>\n                                            <Form.Item label=\"Number\" required>\n                                                <Input placeholder=\"Number\" value={v.number} onChange={e => { handleChange({ [`contactDetails.${i}.number`]: e.target.value }) }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={4}>\n                                            <Form.Item label=\" \" >\n                                                {\n                                                    i !== 0\n                                                        ? <Button type=\"primary\" danger shape=\"circle\" icon={<MinusOutlined />} onClick={() => {\n                                                            handleChange({ contactDetails: [...data.contactDetails.filter((vv, ii) => ii !== i)] });\n                                                        }} />\n                                                        : null\n                                                }\n                                                {\n                                                    i + 1 === data.contactDetails?.length\n                                                        ? <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} onClick={() => {\n                                                            handleChange({ contactDetails: [...data.contactDetails, {}] });\n                                                        }} />\n                                                        : null\n                                                }\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}></Col>\n                                    </React.Fragment>\n                                ))\n                            }\n\n\n                        </Row>\n                    </Col>\n                    <Col span={2} style={{ textAlign: \"center\" }}>\n                        <Divider type=\"vertical\" style={{ height: \"100%\" }}></Divider>\n                    </Col>\n                    <Col span={11}>\n                        <Row gutter={[12, 8]}>\n                            <Col span={24}>\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Jinalaya Timing</Typography.Text></Divider>\n                            </Col>\n                            <Col span={24}>\n                                <Radio.Group\n                                    options={[{ label: \"Custom\", value: 'custom' }, { label: \"All Day\", value: \"allDay\" }]}\n                                    optionType=\"button\"\n                                    buttonStyle=\"solid\"\n                                    value={data.timing?.type}\n                                    onChange={(e) => { handleChange({ 'timing.type': e.target.value, 'timing.custom': null, 'timing.allDay': null }); }}\n                                />\n                            </Col>\n                            <Col span={24}></Col>\n                            {\n                                data.timing?.type === 'custom'\n                                    ? <>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Morning\" required>\n                                                <TimePicker.RangePicker className=\"w-100\"\n                                                    value={data?.timing?.custom?.morning && [moment(data?.timing?.custom?.morning?.[0]), moment(data?.timing?.custom?.morning?.[1])]}\n                                                    onChange={(v) => { handleChange({ [`timing.custom.morning`]: v }); }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Evening\" required>\n                                                <TimePicker.RangePicker className=\"w-100\"\n                                                    value={data?.timing?.custom?.evening && [moment(data?.timing?.custom?.evening?.[0]), moment(data?.timing?.custom?.evening?.[1])]}\n                                                    onChange={(v) => { handleChange({ [`timing.custom.evening`]: v }); }} />\n                                            </Form.Item>\n                                        </Col>\n                                    </>\n                                    : <Col span={24}>\n                                        <Form.Item label=\"Choose\" required>\n                                            <TimePicker.RangePicker className=\"w-100\"\n                                                value={data?.timing?.allDay && [moment(data?.timing?.allDay?.[0]), moment(data?.timing?.allDay?.[1])]}\n                                                onChange={(v) => { handleChange({ [`timing.allDay`]: v }); }} />\n                                        </Form.Item>\n                                    </Col>\n                            }\n\n                        </Row>\n                    </Col>\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Parking Facilities</Typography.Text></Divider>\n                    </Col>\n\n\n\n                    {\n                        data.parkingFacilities?.map((v, i) => (\n                            <Col span={8} key={i}>\n                                <Form.Item label={\n                                    <Checkbox checked={data?.parkingFacilities?.[i]?.available}\n                                        onChange={e => {\n                                            handleChange({\n                                                [`parkingFacilities.${i}.available`]: e.target.checked,\n                                                [`parkingFacilities.${i}.remarks`]: ''\n                                            });\n                                        }}>\n                                        {\n                                            data?.parkingFacilities?.[i]?.type === 'rickshaw'\n                                                ? 'Rickshaw'\n                                                : data?.parkingFacilities?.[i]?.type === 'car'\n                                                    ? 'Car'\n                                                    : data?.parkingFacilities?.[i]?.type === 'bus'\n                                                        ? 'Bus'\n                                                        : null\n                                        }\n                                    </Checkbox>}>\n                                    {\n                                        +data?.parkingFacilities?.[i]?.available\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.parkingFacilities?.[i]?.remarks} onChange={e => { handleChange({ [`parkingFacilities.${i}.remarks`]: e.target.value }) }} />\n                                            : null\n                                    }\n\n                                </Form.Item>\n                            </Col>\n                        ))\n                    }\n\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rest Room Facilities</Typography.Text></Divider>\n                    </Col>\n\n                    {\n                        data.restRoomFacility?.map((v, i) => (\n                            <Col span={24} key={i}>\n                                <Card size=\"small\">\n                                    <Row gutter={[12, 2]}>\n                                        <Col span={6}>{v.type === 'male' ? 'Male' : v.type === 'female' ? 'Female' : null}</Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.bathroom} onChange={e => {\n                                                handleChange({\n                                                    [`restRoomFacility.${i}.bathroom`]: e.target.checked,\n                                                });\n                                            }}>Bathroom</Checkbox>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.toilet} onChange={e => {\n                                                handleChange({\n                                                    [`restRoomFacility.${i}.toilet`]: e.target.checked,\n                                                });\n                                            }}>Toilet</Checkbox>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.locker} onChange={e => {\n                                                handleChange({\n                                                    [`restRoomFacility.${i}.locker`]: e.target.checked,\n                                                });\n                                            }}>Bus</Checkbox>\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Col>\n                        ))\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Distance From Temple</Typography.Text></Divider>\n                    </Col>\n                    {\n                        data.distanceFrom?.map((v, i) => (\n                            <Col span={8} key={i}>\n                                <Form.Item label={\n                                    <Checkbox checked={data?.distanceFrom?.[i]?.available}\n                                        onChange={e => {\n                                            handleChange({\n                                                [`distanceFrom.${i}.available`]: e.target.checked,\n                                                [`distanceFrom.${i}.remarks`]: ''\n                                            });\n                                        }}>\n                                        {\n                                            data?.distanceFrom?.[i]?.type === 'busStop'\n                                                ? 'Main Busstop'\n                                                : data?.distanceFrom?.[i]?.type === 'railway'\n                                                    ? 'Main Railway Station'\n                                                    : data?.distanceFrom?.[i]?.type === 'airport'\n                                                        ? 'Neares Airport'\n                                                        : null\n                                        }\n                                    </Checkbox>}>\n                                    {\n                                        +data?.distanceFrom?.[i]?.available\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.distanceFrom?.[i]?.remarks} onChange={e => { handleChange({ [`distanceFrom.${i}.remarks`]: e.target.value }) }} />\n                                            : null\n                                    }\n\n                                </Form.Item>\n                            </Col>\n                        ))\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}></Divider>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label={<Checkbox checked={data.upashray?.available} onChange={e => { handleChange({ [`upashray.available`]: e.target.checked }); }}>Upashray</Checkbox>}>\n                            {\n                                data.upashray?.available\n                                    ? <Input type=\"text\" placeholder=\"Number\" value={data.upashray.value} onChange={e => { handleChange({ [`upashray.value`]: util.handleInteger(e.target.value) }); }} />\n                                    : null\n                            }\n\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Others Details</Typography.Text></Divider>\n                    </Col>\n\n                    <Col span={24}>\n                        <Form.Item label=\"History\">\n                            <Input.TextArea type=\"text\" placeholder=\"Remarks\" rows={10}\n                                value={data.historyDetails}\n                                onChange={e => { handleChange({ historyDetails: e.target.value }); }}\n                            />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={6}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\n                                <Select.Option value={true}>Active</Select.Option>\n                                <Select.Option value={false}>Inactive</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={24}></Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\n    const [bhagwan, setBhagwan] = useState([]);\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [cities, setCities] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            bhagwanService.list({ isAll: 1, ln: 'hi' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan data not loaded', 'error'); });\n            locationService.listState({ isAll: 1, ln: 'hi' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'hi' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            locationService.listCity({ isAll: 1, ln: 'hi' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Jinalaya's Photo\">\n                            <UploadImage {...{ fileList, setFileList }} count={50} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Basic Details</Typography.Text></Divider>\n                    </Col>\n                    <Col span={18}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Unique Code\" required>\n                            <Input placeholder=\"Unique Code\" value={data.code} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Foundation Date\" required>\n                            <Space>\n                                <Select style={{ width: \"80px\" }} value={data?.foundation?.type} disabled >\n                                    <Select.Option value=\"bc\">BC</Select.Option>\n                                    <Select.Option value=\"ad\">AD</Select.Option>\n                                </Select>\n                                {\n                                    data?.foundation?.type === 'bc'\n                                        ? <Input placeholder=\"Ex - 200\" value={data?.foundation?.bc} disabled />\n                                        : <DatePicker format={'DD MMM YYYY'} value={moment(data?.foundation?.ad)} disabled />\n                                }\n                            </Space>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Mulnayak\" required>\n                            <Select value={data.bhagwanId} disabled >\n                                {\n                                    bhagwan.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Pratisthacharya Name\" required>\n                            <Input placeholder=\"Pratisthacharya Name\" value={data.pratisthacharya} onChange={e => { handleChange({ pratisthacharya: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Dhwaja Labharthi\" required>\n                            <Input placeholder=\"Dhwaja Labharthi\" value={data.dhwajaLabharthi} onChange={e => { handleChange({ dhwajaLabharthi: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Jinalaya Included In</Typography.Text></Divider>\n                    </Col>\n                    <Col span={8}>\n                        <Checkbox checked={data.isParshvanath} disabled>108 Parshwanath</Checkbox>\n                    </Col>\n                    <Col span={8}>\n                        <Checkbox checked={data.is24TirthankarJinalaya} disabled>24 Tirthankar Jinalaya</Checkbox>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Address</Typography.Text></Divider>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} disabled>\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"District\" required>\n                            <Select value={data.districtId} disabled >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"City\" required>\n                            <Select value={data.cityId} disabled >\n                                {\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Pin Code\" required>\n                            <Input placeholder=\"Pin Code\" value={data.pincode} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Address\" required>\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} rows={3} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={12}>\n                                <Form.Item label=\"Latitude\" required>\n                                    <Input placeholder=\"Latitude\" value={data?.location?.coordinates?.[0]} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"Longitude\" required>\n                                    <Input placeholder=\"Longitude\" value={data?.location?.coordinates?.[1]} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Button className=\"w-100\" type=\"primary\" disabled>Set Location</Button>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Divider orientation=\"left\" plain={true}></Divider>\n                    <Col span={11}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Contact Details</Typography.Text></Divider>\n                            </Col>\n                            {\n                                data.contactDetails?.map((v, i) => (\n                                    <React.Fragment key={i}>\n                                        <Col span={10}>\n                                            <Form.Item label=\"Name\" required>\n                                                <Input placeholder=\"Name\" value={v.name} onChange={e => { handleChange({ [`contactDetails.${i}.name`]: e.target.value }) }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={10}>\n                                            <Form.Item label=\"Number\" required>\n                                                <Input placeholder=\"Number\" value={v.number} onChange={e => { handleChange({ [`contactDetails.${i}.number`]: e.target.value }) }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}></Col>\n                                    </React.Fragment>\n                                ))\n                            }\n\n\n                        </Row>\n                    </Col>\n                    <Col span={2} style={{ textAlign: \"center\" }}>\n                        <Divider type=\"vertical\" style={{ height: \"100%\" }}></Divider>\n                    </Col>\n                    <Col span={11}>\n                        <Row gutter={[12, 8]}>\n                            <Col span={24}>\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Jinalaya Timing</Typography.Text></Divider>\n                            </Col>\n                            <Col span={24}>\n                                <Radio.Group\n                                    options={[{ label: \"Custom\", value: 'custom' }, { label: \"All Day\", value: \"allDay\" }]}\n                                    optionType=\"button\"\n                                    buttonStyle=\"solid\"\n                                    value={data.timing?.type}\n                                    disabled\n                                />\n                            </Col>\n                            <Col span={24}></Col>\n                            {\n                                data.timing?.type === 'custom'\n                                    ? <>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Morning\" required>\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\n                                                    value={data?.timing?.custom?.morning && [moment(data?.timing?.custom?.morning?.[0]), moment(data?.timing?.custom?.morning?.[1])]} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Evening\" required>\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\n                                                    value={data?.timing?.custom?.evening && [moment(data?.timing?.custom?.evening?.[0]), moment(data?.timing?.custom?.evening?.[1])]} />\n                                            </Form.Item>\n                                        </Col>\n                                    </>\n                                    : <Col span={24}>\n                                        <Form.Item label=\"Choose\" required>\n                                            <TimePicker.RangePicker className=\"w-100\" disabled\n                                                value={data?.timing?.allDay && [moment(data?.timing?.allDay?.[0]), moment(data?.timing?.allDay?.[1])]} />\n                                        </Form.Item>\n                                    </Col>\n                            }\n\n                        </Row>\n                    </Col>\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Parking Facilities</Typography.Text></Divider>\n                    </Col>\n\n\n\n                    {\n                        data.parkingFacilities?.map((v, i) => (\n                            <Col span={8} key={i}>\n                                <Form.Item label={\n                                    <Checkbox checked={data?.parkingFacilities?.[i]?.available} disabled>\n                                        {\n                                            data?.parkingFacilities?.[i]?.type === 'rickshaw'\n                                                ? 'Rickshaw'\n                                                : data?.parkingFacilities?.[i]?.type === 'car'\n                                                    ? 'Car'\n                                                    : data?.parkingFacilities?.[i]?.type === 'bus'\n                                                        ? 'Bus'\n                                                        : null\n                                        }\n                                    </Checkbox>}>\n                                    {\n                                        +data?.parkingFacilities?.[i]?.available\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.parkingFacilities?.[i]?.remarks} onChange={e => { handleChange({ [`parkingFacilities.${i}.remarks`]: e.target.value }) }} />\n                                            : null\n                                    }\n\n                                </Form.Item>\n                            </Col>\n                        ))\n                    }\n\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rest Room Facilities</Typography.Text></Divider>\n                    </Col>\n\n                    {\n                        data.restRoomFacility?.map((v, i) => (\n                            <Col span={24} key={i}>\n                                <Card size=\"small\">\n                                    <Row gutter={[12, 2]}>\n                                        <Col span={6}>{v.type === 'male' ? 'Male' : v.type === 'female' ? 'Female' : null}</Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.bathroom} disabled>Bathroom</Checkbox>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.toilet} disabled>Toilet</Checkbox>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.locker} disabled>Bus</Checkbox>\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Col>\n                        ))\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Distance From Temple</Typography.Text></Divider>\n                    </Col>\n                    {\n                        data.distanceFrom?.map((v, i) => (\n                            <Col span={8} key={i}>\n                                <Form.Item label={\n                                    <Checkbox checked={data?.distanceFrom?.[i]?.available} disabled>\n                                        {\n                                            data?.distanceFrom?.[i]?.type === 'busStop'\n                                                ? 'Main Busstop'\n                                                : data?.distanceFrom?.[i]?.type === 'railway'\n                                                    ? 'Main Railway Station'\n                                                    : data?.distanceFrom?.[i]?.type === 'airport'\n                                                        ? 'Neares Airport'\n                                                        : null\n                                        }\n                                    </Checkbox>}>\n                                    {\n                                        +data?.distanceFrom?.[i]?.available\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.distanceFrom?.[i]?.remarks} onChange={e => { handleChange({ [`distanceFrom.${i}.remarks`]: e.target.value }) }} />\n                                            : null\n                                    }\n\n                                </Form.Item>\n                            </Col>\n                        ))\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}></Divider>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label={<Checkbox checked={data.upashray?.available} disabled>Upashray</Checkbox>}>\n                            {\n                                data.upashray?.available\n                                    ? <Input type=\"text\" placeholder=\"Number\" value={data.upashray.value} disabled />\n                                    : null\n                            }\n\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Others Details</Typography.Text></Divider>\n                    </Col>\n\n                    <Col span={24}>\n                        <Form.Item label=\"History\">\n                            <Input.TextArea type=\"text\" placeholder=\"Remarks\" rows={10}\n                                value={data.historyDetails}\n                                onChange={e => { handleChange({ historyDetails: e.target.value }); }}\n                            />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={6}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} disabled >\n                                <Select.Option value={true}>Active</Select.Option>\n                                <Select.Option value={false}>Inactive</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={24}></Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\n    const [bhagwan, setBhagwan] = useState([]);\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [cities, setCities] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            bhagwanService.list({ isAll: 1, ln: 'gu' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan data not loaded', 'error'); });\n            locationService.listState({ isAll: 1, ln: 'gu' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'gu' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            locationService.listCity({ isAll: 1, ln: 'gu' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Jinalaya's Photo\">\n                            <UploadImage {...{ fileList, setFileList }} count={50} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Basic Details</Typography.Text></Divider>\n                    </Col>\n                    <Col span={18}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Unique Code\" required>\n                            <Input placeholder=\"Unique Code\" value={data.code} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Foundation Date\" required>\n                            <Space>\n                                <Select style={{ width: \"80px\" }} value={data?.foundation?.type} disabled >\n                                    <Select.Option value=\"bc\">BC</Select.Option>\n                                    <Select.Option value=\"ad\">AD</Select.Option>\n                                </Select>\n                                {\n                                    data?.foundation?.type === 'bc'\n                                        ? <Input placeholder=\"Ex - 200\" value={data?.foundation?.bc} disabled />\n                                        : <DatePicker format={'DD MMM YYYY'} value={moment(data?.foundation?.ad)} disabled />\n                                }\n                            </Space>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Mulnayak\" required>\n                            <Select value={data.bhagwanId} disabled >\n                                {\n                                    bhagwan.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Pratisthacharya Name\" required>\n                            <Input placeholder=\"Pratisthacharya Name\" value={data.pratisthacharya} onChange={e => { handleChange({ pratisthacharya: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Dhwaja Labharthi\" required>\n                            <Input placeholder=\"Dhwaja Labharthi\" value={data.dhwajaLabharthi} onChange={e => { handleChange({ dhwajaLabharthi: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Jinalaya Included In</Typography.Text></Divider>\n                    </Col>\n                    <Col span={8}>\n                        <Checkbox checked={data.isParshvanath} disabled>108 Parshwanath</Checkbox>\n                    </Col>\n                    <Col span={8}>\n                        <Checkbox checked={data.is24TirthankarJinalaya} disabled>24 Tirthankar Jinalaya</Checkbox>\n                    </Col>\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Address</Typography.Text></Divider>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} disabled>\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"District\" required>\n                            <Select value={data.districtId} disabled >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"City\" required>\n                            <Select value={data.cityId} disabled >\n                                {\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Pin Code\" required>\n                            <Input placeholder=\"Pin Code\" value={data.pincode} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Address\" required>\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} rows={3} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={12}>\n                                <Form.Item label=\"Latitude\" required>\n                                    <Input placeholder=\"Latitude\" value={data?.location?.coordinates?.[0]} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"Longitude\" required>\n                                    <Input placeholder=\"Longitude\" value={data?.location?.coordinates?.[1]} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Button className=\"w-100\" type=\"primary\" disabled>Set Location</Button>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Divider orientation=\"left\" plain={true}></Divider>\n                    <Col span={11}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Contact Details</Typography.Text></Divider>\n                            </Col>\n                            {\n                                data.contactDetails?.map((v, i) => (\n                                    <React.Fragment key={i}>\n                                        <Col span={10}>\n                                            <Form.Item label=\"Name\" required>\n                                                <Input placeholder=\"Name\" value={v.name} onChange={e => { handleChange({ [`contactDetails.${i}.name`]: e.target.value }) }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={10}>\n                                            <Form.Item label=\"Number\" required>\n                                                <Input placeholder=\"Number\" value={v.number} onChange={e => { handleChange({ [`contactDetails.${i}.number`]: e.target.value }) }} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}></Col>\n                                    </React.Fragment>\n                                ))\n                            }\n\n\n                        </Row>\n                    </Col>\n                    <Col span={2} style={{ textAlign: \"center\" }}>\n                        <Divider type=\"vertical\" style={{ height: \"100%\" }}></Divider>\n                    </Col>\n                    <Col span={11}>\n                        <Row gutter={[12, 8]}>\n                            <Col span={24}>\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Jinalaya Timing</Typography.Text></Divider>\n                            </Col>\n                            <Col span={24}>\n                                <Radio.Group\n                                    options={[{ label: \"Custom\", value: 'custom' }, { label: \"All Day\", value: \"allDay\" }]}\n                                    optionType=\"button\"\n                                    buttonStyle=\"solid\"\n                                    value={data.timing?.type}\n                                    disabled\n                                />\n                            </Col>\n                            <Col span={24}></Col>\n                            {\n                                data.timing?.type === 'custom'\n                                    ? <>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Morning\" required>\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\n                                                    value={data?.timing?.custom?.morning && [moment(data?.timing?.custom?.morning?.[0]), moment(data?.timing?.custom?.morning?.[1])]} />\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={24}>\n                                            <Form.Item label=\"Evening\" required>\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\n                                                    value={data?.timing?.custom?.evening && [moment(data?.timing?.custom?.evening?.[0]), moment(data?.timing?.custom?.evening?.[1])]} />\n                                            </Form.Item>\n                                        </Col>\n                                    </>\n                                    : <Col span={24}>\n                                        <Form.Item label=\"Choose\" required>\n                                            <TimePicker.RangePicker className=\"w-100\" disabled\n                                                value={data?.timing?.allDay && [moment(data?.timing?.allDay?.[0]), moment(data?.timing?.allDay?.[1])]} />\n                                        </Form.Item>\n                                    </Col>\n                            }\n\n                        </Row>\n                    </Col>\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Parking Facilities</Typography.Text></Divider>\n                    </Col>\n\n\n\n                    {\n                        data.parkingFacilities?.map((v, i) => (\n                            <Col span={8} key={i}>\n                                <Form.Item label={\n                                    <Checkbox checked={data?.parkingFacilities?.[i]?.available} disabled>\n                                        {\n                                            data?.parkingFacilities?.[i]?.type === 'rickshaw'\n                                                ? 'Rickshaw'\n                                                : data?.parkingFacilities?.[i]?.type === 'car'\n                                                    ? 'Car'\n                                                    : data?.parkingFacilities?.[i]?.type === 'bus'\n                                                        ? 'Bus'\n                                                        : null\n                                        }\n                                    </Checkbox>}>\n                                    {\n                                        +data?.parkingFacilities?.[i]?.available\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.parkingFacilities?.[i]?.remarks} onChange={e => { handleChange({ [`parkingFacilities.${i}.remarks`]: e.target.value }) }} />\n                                            : null\n                                    }\n\n                                </Form.Item>\n                            </Col>\n                        ))\n                    }\n\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rest Room Facilities</Typography.Text></Divider>\n                    </Col>\n\n                    {\n                        data.restRoomFacility?.map((v, i) => (\n                            <Col span={24} key={i}>\n                                <Card size=\"small\">\n                                    <Row gutter={[12, 2]}>\n                                        <Col span={6}>{v.type === 'male' ? 'Male' : v.type === 'female' ? 'Female' : null}</Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.bathroom} disabled>Bathroom</Checkbox>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.toilet} disabled>Toilet</Checkbox>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Checkbox checked={v.locker} disabled>Bus</Checkbox>\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Col>\n                        ))\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Distance From Temple</Typography.Text></Divider>\n                    </Col>\n                    {\n                        data.distanceFrom?.map((v, i) => (\n                            <Col span={8} key={i}>\n                                <Form.Item label={\n                                    <Checkbox checked={data?.distanceFrom?.[i]?.available} disabled>\n                                        {\n                                            data?.distanceFrom?.[i]?.type === 'busStop'\n                                                ? 'Main Busstop'\n                                                : data?.distanceFrom?.[i]?.type === 'railway'\n                                                    ? 'Main Railway Station'\n                                                    : data?.distanceFrom?.[i]?.type === 'airport'\n                                                        ? 'Neares Airport'\n                                                        : null\n                                        }\n                                    </Checkbox>}>\n                                    {\n                                        +data?.distanceFrom?.[i]?.available\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.distanceFrom?.[i]?.remarks} onChange={e => { handleChange({ [`distanceFrom.${i}.remarks`]: e.target.value }) }} />\n                                            : null\n                                    }\n\n                                </Form.Item>\n                            </Col>\n                        ))\n                    }\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}></Divider>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label={<Checkbox checked={data.upashray?.available} disabled>Upashray</Checkbox>}>\n                            {\n                                data.upashray?.available\n                                    ? <Input type=\"text\" placeholder=\"Number\" value={data.upashray.value} disabled />\n                                    : null\n                            }\n\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={24}>\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Others Details</Typography.Text></Divider>\n                    </Col>\n\n                    <Col span={24}>\n                        <Form.Item label=\"History\">\n                            <Input.TextArea type=\"text\" placeholder=\"Remarks\" rows={10}\n                                value={data.historyDetails}\n                                onChange={e => { handleChange({ historyDetails: e.target.value }); }}\n                            />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={6}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} disabled >\n                                <Select.Option value={true}>Active</Select.Option>\n                                <Select.Option value={false}>Inactive</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={24}></Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst ShalaModal = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt);\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title=\"Shala Details\"\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onCancel={() => { setOpen(false); }}\n                maskClosable={false}\n                width={1400}\n                destroyOnClose\n                className=\"app-modal-body-overflow\"\n                footer={null}\n            >\n                <Shala {...{ type: data.type, jinalayaId: data._id }} />\n            </Modal>\n        </>\n    );\n});\n\nconst KalyanakModal = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt);\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title=\"Kalyanak Details\"\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onCancel={() => { setOpen(false); }}\n                maskClosable={false}\n                width={1400}\n                destroyOnClose\n                className=\"app-modal-body-overflow\"\n                footer={null}\n            >\n                <Kalyanak {...{ jinalayaId: data._id }} />\n            </Modal>\n        </>\n    );\n});","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../../services/location';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function City({ stateId = null, districtId = null }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, stateId, districtId });\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this city?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.listCity(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.deleteCity(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Cities</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected cities?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [rowData, setRowData] = useState({});\n    const [data, setData] = useState({});\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n\n\n    const handleChange = (v) => {\n        if (changeForm) {\n            setData({ ...data, ...v });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setRowData(dt ? { ...dt } : { status: true });\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailCity(rowData._id, { ln }).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.saveCity(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ _id: res.data._id });\n                if (ln === \"en\") {\n                    list();\n                    setRowData({ ...rowData, _id: res.data._id });\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => { if (rowData._id) { getDetails(); } }, [ln]);\n    useEffect(() => { if (rowData._id) { getDetails(); } else { setLn('en'); } }, [rowData]);\n    useEffect(() => {\n        if (!open) {\n            setData({});\n            setRowData({});\n        }\n    }, [open]);\n\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' City'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); setRowData({}); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !rowData._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !rowData._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm }) => {\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            service.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} onChange={v => { handleChange({ stateId: v, districtId: null }) }} >\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"District\" required>\n                            <Select value={data.districtId} onChange={v => { handleChange({ districtId: v }) }} >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm }) => {\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n\n    useEffect(() => {\n        if (viewAccess) {\n            service.listState({ isAll: 1, ln: 'hi' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            service.listDistrict({ isAll: 1, ln: 'hi' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} disabled>\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"District\" required>\n                            <Select value={data.districtId} disabled >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm }) => {\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n\n    useEffect(() => {\n        if (viewAccess) {\n            service.listState({ isAll: 1, ln: 'gu' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            service.listDistrict({ isAll: 1, ln: 'gu' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} disabled>\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"District\" required>\n                            <Select value={data.districtId} disabled >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../../services/location';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport City from './City';\nimport commonObj from '../../../commonObj';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function District({ stateId = null }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, stateId });\n    const addNewModalRef = useRef();\n    const cityModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Cities',\n            dataIndex: '_id',\n            width: 110,\n            render: (v, row) => {\n                return <>\n                    <Button type=\"primary\" size='small' onClick={() => { cityModalRef.current.openForm(row) }} >Cities</Button>\n                </>\n            }\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this district?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.listDistrict(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.deleteDistrict(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Districts</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, stateId }} />\n            <CityModal ref={cityModalRef} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected districts?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, stateId = null } = props;\n    const [open, setOpen] = useState(false);\n    const [rowData, setRowData] = useState({});\n    const [data, setData] = useState({});\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n\n\n    const handleChange = (v, k) => { !changeForm || setData({ ...data, [k]: v }); }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setRowData(dt ? { ...dt } : {});\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailDistrict(rowData._id, { ln }).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.saveDistrict(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange(res.data._id, '_id');\n                if (ln === \"en\") {\n                    list();\n                    setRowData({ ...rowData, _id: res.data._id });\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => { if (rowData._id) { getDetails(); } }, [ln]);\n    useEffect(() => { if (rowData._id) { getDetails(); } else { setLn('en'); setData({ stateId }) } }, [rowData]);\n    useEffect(() => {\n        if (!open) {\n            setData({});\n            setRowData({});\n        }\n    }, [open]);\n\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' District'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); setRowData({}); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !rowData._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !rowData._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm }) => {\n    const [states, setStates] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} onChange={v => { handleChange(v, 'stateId') }} >\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm }) => {\n    const [states, setStates] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listState({ isAll: 1, ln: 'hi' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} disabled>\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm }) => {\n    const [states, setStates] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listState({ isAll: 1, ln: 'gu' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} disabled>\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst CityModal = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt ? { ...dt } : { status: true });\n        }\n    }));\n\n\n    return (\n        <>\n            <Modal\n                title={<>All cities of <Typography.Text type=\"danger\">{data.name}</Typography.Text></>}\n                style={{ top: 20 }}\n                open={open}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={900}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                ]}\n            >\n                <City {...{ districtId: data._id }} />\n            </Modal>\n        </>\n    );\n});","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../../services/location';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport District from './District';\nimport commonObj from '../../../commonObj';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function State() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n    const districtModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Districts',\n            dataIndex: '_id',\n            width: 110,\n            render: (v, row) => {\n                return <>\n                    <Button type=\"primary\" size='small' onClick={() => { districtModalRef.current.openForm(row) }} >Districts</Button>\n                </>\n            }\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this state?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.listState(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.deleteState(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of States</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n            <DistrictModal ref={districtModalRef} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected states?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [rowData, setRowData] = useState({});\n    const [data, setData] = useState({});\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n\n\n    const handleChange = (v, k) => { !changeForm || setData({ ...data, [k]: v }); }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setRowData(dt ? { ...dt } : { status: true });\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailState(rowData._id, { ln }).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.saveState(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange(res.data._id, '_id');\n                if (ln === \"en\") {\n                    list();\n                    setRowData({ ...rowData, _id: res.data._id });\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => { if (rowData._id) { getDetails(); } }, [ln]);\n    useEffect(() => { if (rowData._id) { getDetails(); } else { setLn('en'); } }, [rowData]);\n    useEffect(() => {\n        if (!open) {\n            setData({});\n            setRowData({});\n        }\n    }, [open]);\n\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' State'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); setRowData({}); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} destroyInactiveTabPane onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !rowData._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !rowData._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm }) => {\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm }) => {\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm }) => {\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst DistrictModal = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt ? { ...dt } : { status: true });\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title={<>All districts of <Typography.Text type=\"danger\">{data.name}</Typography.Text></>}\n                style={{ top: 20 }}\n                open={open}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={1600}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                ]}\n            >\n                <District {...{ stateId: data._id }} />\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'event';\n\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Tag, DatePicker } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport moment from \"moment\";\nimport service from '../../services/event';\nimport locationService from '../../services/location';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport commonObj from '../../commonObj';\nimport UploadImage from '../../utils/UploadImage';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function Event() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'State',\n            dataIndex: 'stateDetails',\n            width: 200,\n            render: v => v?.name\n        },\n        {\n            title: 'District',\n            dataIndex: 'districtDetails',\n            width: 200,\n            render: v => v?.name\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this city?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.list(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Events</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    // const [cities, setCities] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            locationService.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            // locationService.listCity({ isAll: 1, ln: 'en' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item>\n                        <Select placeholder=\"State\" value={qData.stateId} onChange={v => { setQData({ ...qData, stateId: v, districtId: null }) }} allowClear >\n                            {\n                                states.map(v => (\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                ))\n                            }\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item>\n                        <Select placeholder=\"District\" value={qData.districtId} onChange={v => { setQData({ ...qData, districtId: v }) }} allowClear >\n                            {\n                                districts.filter(v => v.stateId === qData.stateId).map(v => (\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                ))\n                            }\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected events?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n    const [fileList, setFileList] = useState([]);\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : {\n                        status: true,\n                        startDate: moment(),\n                        endDate: moment(),\n                    }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data.parentId || data._id, { ln }).then(res => {\n            setData(res.data || {});\n            setFileList(res.data?.imgUrls || []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.save(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                if (ln === \"en\") {\n                    list();\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [ln, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setLn('en');\n            setFileList([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        handleChange({ imgUrls: fileList });\n    }, [fileList]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Event'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={800}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\n                                </Card>,\n                                disabled: !data._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\n                                </Card>,\n                                disabled: !data._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\n\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [cities, setCities] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            locationService.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            locationService.listCity({ isAll: 1, ln: 'en' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList, setFileList }} count={10} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Description\" required>\n                            <Input.TextArea placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Start Date\" required>\n                            <DatePicker\n                                className=\"w-100\"\n                                format={'DD MMM YYYY'} value={moment(data?.startDate)}\n                                onChange={(v) => { handleChange({ startDate: v }) }} allowClear={false} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"End Date\" required>\n                            <DatePicker\n                                className=\"w-100\"\n                                format={'DD MMM YYYY'} value={moment(data?.endDate)}\n                                onChange={(v) => { handleChange({ endDate: v }) }} allowClear={false} />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} onChange={v => { handleChange({ stateId: v, districtId: null, cityId: null }) }} >\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"District\" required>\n                            <Select value={data.districtId} onChange={v => { handleChange({ districtId: v, cityId: null }) }} >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"City\" required>\n                            <Select value={data.cityId} onChange={v => { handleChange({ cityId: v }) }} >\n                                {\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Pin Code\">\n                            <Input placeholder=\"Pin Code\" value={data.pincode} onChange={e => { handleChange({ pincode: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Address\">\n                            <Input placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\n                                <Select.Option value={true}>Active</Select.Option>\n                                <Select.Option value={false}>Inactive</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [cities, setCities] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            locationService.listState({ isAll: 1, ln: 'hi' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'hi' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            locationService.listCity({ isAll: 1, ln: 'hi' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList, setFileList }} count={10} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Description\" required>\n                            <Input.TextArea placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Start Date\" required>\n                            <DatePicker\n                                className=\"w-100\"\n                                format={'DD MMM YYYY'} value={moment(data?.startDate)}\n                                disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"End Date\" required>\n                            <DatePicker\n                                className=\"w-100\"\n                                format={'DD MMM YYYY'} value={moment(data?.endDate)}\n                                disabled />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} disabled >\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"District\" required>\n                            <Select value={data.districtId} disabled >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"City\" required>\n                            <Select value={data.cityId} disabled >\n                                {\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Pin Code\">\n                            <Input placeholder=\"Pin Code\" value={data.pincode} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Address\">\n                            <Input placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} disabled >\n                                <Select.Option value={true}>Active</Select.Option>\n                                <Select.Option value={false}>Inactive</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [cities, setCities] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            locationService.listState({ isAll: 1, ln: 'gu' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'gu' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            locationService.listCity({ isAll: 1, ln: 'gu' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList, setFileList }} count={10} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Description\" required>\n                            <Input.TextArea placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Start Date\" required>\n                            <DatePicker\n                                className=\"w-100\"\n                                format={'DD MMM YYYY'} value={moment(data?.startDate)}\n                                disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"End Date\" required>\n                            <DatePicker\n                                className=\"w-100\"\n                                format={'DD MMM YYYY'} value={moment(data?.endDate)}\n                                disabled />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} disabled >\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"District\" required>\n                            <Select value={data.districtId} disabled >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"City\" required>\n                            <Select value={data.cityId} disabled >\n                                {\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Pin Code\">\n                            <Input placeholder=\"Pin Code\" value={data.pincode} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Address\">\n                            <Input placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} disabled >\n                                <Select.Option value={true}>Active</Select.Option>\n                                <Select.Option value={false}>Inactive</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'job';\n\n    static detailJobSeeker(id, data) {\n        return axios.get(this.baseURL + '/seeker/details/' + id, { params: data });\n    }\n    static listJobSeeker(data) {\n        return axios.get(this.baseURL + '/seeker/list', { params: data });\n    }\n    static saveJobSeeker(data, query) {\n        return axios.post(this.baseURL + \"/seeker/save\", data, { params: query });\n    }\n    static deleteJobSeeker(id) {\n        return axios.post(this.baseURL + '/seeker/delete', { ids: id });\n    }\n\n    static detailJob(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static listJob(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static saveJob(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static deleteJob(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Checkbox, Tag, Radio, Divider } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../../services/job';\nimport locationService from '../../../services/location';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\nimport util from '../../../utils/util';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function Job() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Company Name',\n            dataIndex: 'companyName',\n            width: 250,\n        },\n        {\n            title: 'Age Limit',\n            dataIndex: 'ageLimit',\n            width: 80,\n        },\n        {\n            title: 'Opening',\n            dataIndex: 'openingCount',\n            width: 80,\n        },\n        {\n            title: 'Experience',\n            dataIndex: 'experience',\n            width: 100,\n        },\n\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Open</Tag>\n                } else {\n                    return <Tag color='red'>Closed</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this Job?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.listJob(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.deleteJob(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Jobs</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by job name / company name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected jobs?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { status: true }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailJob(data.parentId || data._id, { ln }).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.saveJob(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                if (ln === \"en\") {\n                    list();\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [ln, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setLn('en');\n        }\n    }, [open]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Job'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={1000}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !data._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !data._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm }) => {\n\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [cities, setCities] = useState([]);\n\n    useEffect(() => {\n        if (viewAccess) {\n            locationService.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            locationService.listCity({ isAll: 1, ln: 'en' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={12}>\n                        <Form.Item label=\"Company Name\" required>\n                            <Input placeholder=\"Company Name\" value={data.companyName} onChange={e => { handleChange({ companyName: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Job Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Age Limit\" required>\n                            <Input placeholder=\"Age Limit\" value={data.ageLimit} onChange={e => { handleChange({ ageLimit: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Opening Count\" required>\n                            <Input placeholder=\"Opening Count\" value={data.openingCount} onChange={e => { handleChange({ openingCount: util.handleInteger(e.target.value) }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Experience\" required>\n                            <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Gender Required\" required>\n                            <Radio.Group onChange={(e) => { handleChange({ requiredGender: e.target.value }) }} value={data.requiredGender} >\n                                <Radio value={'male'}>Male</Radio>\n                                <Radio value={'female'}>Female</Radio>\n                                <Radio value={'both'}>Both</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Staying & Food\" required>\n                            <Checkbox checked={data.staying} onChange={e => { handleChange({ staying: e.target.checked }) }}>Staying </Checkbox>\n                            <Checkbox checked={data.food} onChange={e => { handleChange({ food: e.target.checked }) }}>Food</Checkbox>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Contact\" required>\n                            <Input placeholder=\"Contact\" value={data.contacts} onChange={e => { handleChange({ contacts: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Description\">\n                            <Input.TextArea placeholder=\"Enter some description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Divider></Divider>\n                    <Col span={8}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} onChange={v => { handleChange({ stateId: v, districtId: null, cityId: null }) }} >\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"District\">\n                            <Select value={data.districtId} onChange={v => { handleChange({ districtId: v, cityId: null }) }} >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"City\">\n                            <Select value={data.cityId} onChange={v => { handleChange({ cityId: v }) }} >\n                                {\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Job Address\">\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Divider></Divider>\n                    <Col span={8}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\n                                <Select.Option value={true}>Open</Select.Option>\n                                <Select.Option value={false}>Closed</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm }) => {\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [cities, setCities] = useState([]);\n\n    useEffect(() => {\n        if (viewAccess) {\n            locationService.listState({ isAll: 1, ln: 'hi' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'hi' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            locationService.listCity({ isAll: 1, ln: 'hi' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={12}>\n                        <Form.Item label=\"Company Name\" required>\n                            <Input placeholder=\"Company Name\" value={data.companyName} onChange={e => { handleChange({ companyName: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Job Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Age Limit\" required>\n                            <Input placeholder=\"Age Limit\" value={data.ageLimit} onChange={e => { handleChange({ ageLimit: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Opening Count\" required>\n                            <Input placeholder=\"Opening Count\" value={data.openingCount} onChange={e => { handleChange({ openingCount: util.handleInteger(e.target.value) }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Experience\" required>\n                            <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Gender Required\" required>\n                            <Radio.Group value={data.requiredGender} disabled>\n                                <Radio value={'male'}>Male</Radio>\n                                <Radio value={'female'}>Female</Radio>\n                                <Radio value={'both'}>Both</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Staying & Food\" required>\n                            <Checkbox checked={data.staying} disabled>Staying </Checkbox>\n                            <Checkbox checked={data.food} disabled>Food</Checkbox>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Contact\" required>\n                            <Input placeholder=\"Contact\" value={data.contacts} onChange={e => { handleChange({ contacts: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Description\">\n                            <Input.TextArea placeholder=\"Enter some description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Divider></Divider>\n                    <Col span={8}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} disabled >\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"District\">\n                            <Select value={data.districtId} disabled >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"City\">\n                            <Select value={data.cityId} disabled >\n                                {\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Job Address\">\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Divider></Divider>\n                    <Col span={8}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} disabled >\n                                <Select.Option value={true}>Open</Select.Option>\n                                <Select.Option value={false}>Closed</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm }) => {\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [cities, setCities] = useState([]);\n\n    useEffect(() => {\n        if (viewAccess) {\n            locationService.listState({ isAll: 1, ln: 'gu' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'gu' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            locationService.listCity({ isAll: 1, ln: 'gu' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={12}>\n                        <Form.Item label=\"Company Name\" required>\n                            <Input placeholder=\"Company Name\" value={data.companyName} onChange={e => { handleChange({ companyName: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Job Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Age Limit\" required>\n                            <Input placeholder=\"Age Limit\" value={data.ageLimit} onChange={e => { handleChange({ ageLimit: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Opening Count\" required>\n                            <Input placeholder=\"Opening Count\" value={data.openingCount} onChange={e => { handleChange({ openingCount: util.handleInteger(e.target.value) }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Experience\" required>\n                            <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Gender Required\" required>\n                            <Radio.Group value={data.requiredGender} disabled>\n                                <Radio value={'male'}>Male</Radio>\n                                <Radio value={'female'}>Female</Radio>\n                                <Radio value={'both'}>Both</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Staying & Food\" required>\n                            <Checkbox checked={data.staying} disabled>Staying </Checkbox>\n                            <Checkbox checked={data.food} disabled>Food</Checkbox>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Contact\" required>\n                            <Input placeholder=\"Contact\" value={data.contacts} onChange={e => { handleChange({ contacts: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Description\">\n                            <Input.TextArea placeholder=\"Enter some description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Divider></Divider>\n                    <Col span={8}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} disabled >\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"District\">\n                            <Select value={data.districtId} disabled >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"City\">\n                            <Select value={data.cityId} disabled >\n                                {\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Job Address\">\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Divider></Divider>\n                    <Col span={8}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} disabled >\n                                <Select.Option value={true}>Open</Select.Option>\n                                <Select.Option value={false}>Closed</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Checkbox, Tag, Radio, Divider } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../../services/job';\nimport locationService from '../../../services/location';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\nimport util from '../../../utils/util';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function JobSeekers() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Name',\n            dataIndex: 'parentName',\n            width: 250,\n        },\n        {\n            title: 'Age',\n            dataIndex: 'age',\n            width: 80,\n        },\n        {\n            title: 'Contact Number',\n            dataIndex: 'contacts',\n            width: 120,\n        },\n        {\n            title: 'Experience',\n            dataIndex: 'experience',\n            width: 250,\n        },\n\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 150,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Looking for a job</Tag>\n                } else {\n                    return <Tag color='red'>Not looking for a job</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this job seeker?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.listJobSeeker(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.deleteJobSeeker(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Job Seekers</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by seeker name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected job seekers?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { status: true }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailJobSeeker(data.parentId || data._id, { ln }).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.saveJobSeeker(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                if (ln === \"en\") {\n                    list();\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [ln, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setLn('en');\n        }\n    }, [open]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Job Seeker'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={1000}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !data._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !data._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm }) => {\n\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [cities, setCities] = useState([]);\n\n    useEffect(() => {\n        if (viewAccess) {\n            locationService.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            locationService.listCity({ isAll: 1, ln: 'en' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={12}>\n                        <Form.Item label=\"Job Seeker Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Parent Name\">\n                            <Input placeholder=\"Parent Name\" value={data.parentName} onChange={e => { handleChange({ parentName: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Age\" required>\n                            <Input placeholder=\"Age\" value={data.age} onChange={e => { handleChange({ age: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Gender\" required>\n                            <Select value={data.gender} onChange={v => { handleChange({ gender: v }) }} >\n                                <Select.Option value={'male'}>Male</Select.Option>\n                                <Select.Option value={'female'}>Female</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Contact Number\" required>\n                            <Input placeholder=\"+91 1100223300\" value={data.contacts} onChange={e => { handleChange({ contacts: (e.target.value) }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Relocation\" required>\n                            <Checkbox checked={data.forOtherState} onChange={e => { handleChange({ forOtherState: e.target.checked }) }}>Available for other state</Checkbox>\n                            <Checkbox checked={data.forOtherDistrict} onChange={e => { handleChange({ forOtherDistrict: e.target.checked }) }}>Available for other district</Checkbox>\n                            <Checkbox checked={data.forOtherCity} onChange={e => { handleChange({ forOtherCity: e.target.checked }) }}>Available for other city</Checkbox>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Experience\" required>\n                            <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Description\">\n                            <Input.TextArea placeholder=\"Enter some description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Divider></Divider>\n                    <Col span={8}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} onChange={v => { handleChange({ stateId: v, districtId: null, cityId: null }) }} >\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"District\">\n                            <Select value={data.districtId} onChange={v => { handleChange({ districtId: v, cityId: null }) }} >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"City\">\n                            <Select value={data.cityId} onChange={v => { handleChange({ cityId: v }) }} >\n                                {\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\n                                <Select.Option value={true}>Looking for a job</Select.Option>\n                                <Select.Option value={false}>Not looking for a job</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm }) => {\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [cities, setCities] = useState([]);\n\n    useEffect(() => {\n        if (viewAccess) {\n            locationService.listState({ isAll: 1, ln: 'hi' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'hi' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            locationService.listCity({ isAll: 1, ln: 'hi' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={12}>\n                        <Form.Item label=\"Job Seeker Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Parent Name\">\n                            <Input placeholder=\"Parent Name\" value={data.parentName} onChange={e => { handleChange({ parentName: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Age\" required>\n                            <Input placeholder=\"Age\" value={data.age} onChange={e => { handleChange({ age: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Gender\" required>\n                            <Select value={data.gender} disabled >\n                                <Select.Option value={'male'}>Male</Select.Option>\n                                <Select.Option value={'female'}>Female</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Contact Number\" required>\n                            <Input placeholder=\"+91 1100223300\" value={data.contacts} onChange={e => { handleChange({ contacts: util.handleInteger(e.target.value) }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Relocation\" required>\n                            <Checkbox checked={data.forOtherState} disabled>Available for other state</Checkbox>\n                            <Checkbox checked={data.forOtherDistrict} disabled>Available for other district</Checkbox>\n                            <Checkbox checked={data.forOtherCity} disabled>Available for other city</Checkbox>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Experience\" required>\n                            <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Description\">\n                            <Input.TextArea placeholder=\"Enter some description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Divider></Divider>\n                    <Col span={8}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} disabled >\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"District\">\n                            <Select value={data.districtId} disabled >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"City\">\n                            <Select value={data.cityId} disabled >\n                                {\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} disabled >\n                                <Select.Option value={true}>Looking for a job</Select.Option>\n                                <Select.Option value={false}>Not looking for a job</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm }) => {\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [cities, setCities] = useState([]);\n\n    useEffect(() => {\n        if (viewAccess) {\n            locationService.listState({ isAll: 1, ln: 'gu' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\n            locationService.listDistrict({ isAll: 1, ln: 'gu' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\n            locationService.listCity({ isAll: 1, ln: 'gu' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={12}>\n                        <Form.Item label=\"Job Seeker Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Parent Name\">\n                            <Input placeholder=\"Parent Name\" value={data.parentName} onChange={e => { handleChange({ parentName: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Age\" required>\n                            <Input placeholder=\"Age\" value={data.age} onChange={e => { handleChange({ age: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Gender\" required>\n                            <Select value={data.gender} disabled >\n                                <Select.Option value={'male'}>Male</Select.Option>\n                                <Select.Option value={'female'}>Female</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Contact Number\" required>\n                            <Input placeholder=\"+91 1100223300\" value={data.contacts} onChange={e => { handleChange({ contacts: util.handleInteger(e.target.value) }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Relocation\" required>\n                            <Checkbox checked={data.forOtherState} disabled>Available for other state</Checkbox>\n                            <Checkbox checked={data.forOtherDistrict} disabled>Available for other district</Checkbox>\n                            <Checkbox checked={data.forOtherCity} disabled>Available for other city</Checkbox>\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Experience\" required>\n                            <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Description\">\n                            <Input.TextArea placeholder=\"Enter some description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Divider></Divider>\n                    <Col span={8}>\n                        <Form.Item label=\"State\" required>\n                            <Select value={data.stateId} disabled >\n                                {\n                                    states.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"District\">\n                            <Select value={data.districtId} disabled >\n                                {\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"City\">\n                            <Select value={data.cityId} disabled >\n                                {\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} disabled >\n                                <Select.Option value={true}>Looking for a job</Select.Option>\n                                <Select.Option value={false}>Not looking for a job</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tag, Select } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/user';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport util from '../../utils/util';\nimport UploadImage from '../../utils/UploadImage';\n\nexport default function User() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'firstName',\n            render: (value, row) => {\n                return (value ?? '') + \" \" + (row.lastName ?? '');\n            },\n        },\n        {\n            title: 'Phone',\n            dataIndex: 'phone',\n            width: 150,\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            width: 300,\n        },\n        {\n            title: 'Address',\n            dataIndex: 'address',\n            width: 300,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this user?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                </>\n            }\n        },\n    ];\n\n    function list() {\n        setLoading(true);\n        service.listUser(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.deleteUser(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Users</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            // minWidth=\"500px\"\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name / phone / email\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected users?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n    const [fileList, setFileList] = useState([]);\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt ? { ...dt } : { status: true });\n            if (dt && dt.avatar) {\n                setFileList([{ ...dt.avatar }]);\n            } else {\n                setFileList([]);\n            }\n        }\n    }));\n\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\n\n    const save = () => {\n        setAjxRequesting(true);\n\n        service.saveUser(data).then((res) => {\n            AntdMsg(res.message);\n            setOpen(false);\n            list();\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    useEffect(() => {\n        if (!data._id) {\n            handleChange(util.removeSpecialChars(data?.name || ''), 'userName');\n        }\n    }, [data.name])\n\n    useEffect(() => {\n        handleChange(fileList?.[0], 'avatar');\n    }, [fileList]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={800}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={20}>\n                                <Row gutter={[12, 2]}>\n                                    <Col span={12}>\n                                        <Form.Item label=\"First Name\" required>\n                                            <Input placeholder=\"First Name\" value={data.firstName} onChange={e => { handleChange(e.target.value, 'firstName') }} />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Last Name\" required>\n                                            <Input placeholder=\"Last Name\" value={data.lastName} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), 'lastName') }} />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Phone\" required>\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange(e.target.value, 'phone') }} />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Email\" required>\n                                            <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange((e.target.value), 'email') }} />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col span={4}>\n                                <Form.Item label=\"Avatar\">\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Address\" required>\n                                    <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange((e.target.value), 'address') }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={10}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={v => { handleChange(v, 'status') }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'ecomm';\n    // category : \n    static detailCategory(id, data) {\n        return axios.get(this.baseURL + '/category/details/' + id, { params: data });\n    }\n    static listCategory(data) {\n        return axios.get(this.baseURL + '/category/list', { params: data });\n    }\n    static saveCategory(data, query) {\n        return axios.post(this.baseURL + \"/category/save\", data, { params: query });\n    }\n    static deleteCategory(id) {\n        return axios.post(this.baseURL + '/category/delete', { ids: id });\n    }\n\n    // for sub category\n    static detailSubCategory(id, data) {\n        return axios.get(this.baseURL + '/subcategory/details/' + id, { params: data });\n    }\n    static listSubCategory(data) {\n        return axios.get(this.baseURL + '/subcategory/list', { params: data });\n    }\n    static saveSubCategory(data, query) {\n        return axios.post(this.baseURL + \"/subcategory/save\", data, { params: query });\n    }\n    static deleteSubCategory(id) {\n        return axios.post(this.baseURL + '/subcategory/delete', { ids: id });\n    }\n\n    // for attribute\n    static detailAttribute(id, data) {\n        return axios.get(this.baseURL + '/attribute/details/' + id, { params: data });\n    }\n    static listAttribute(data) {\n        return axios.get(this.baseURL + '/attribute/list', { params: data });\n    }\n    static saveAttribute(data, query) {\n        return axios.post(this.baseURL + \"/attribute/save\", data, { params: query });\n    }\n    static deleteAttribute(id) {\n        return axios.post(this.baseURL + '/attribute/delete', { ids: id });\n    }\n\n\n    // for Product : \n    static detailProduct(id, data) {\n        return axios.get(this.baseURL + '/product/details/' + id, { params: data });\n    }\n    static listProduct(data) {\n        return axios.get(this.baseURL + '/product/list', { params: data });\n    }\n    static saveProduct(data, query) {\n        return axios.post(this.baseURL + \"/product/save\", data, { params: query });\n    }\n    static deleteProduct(id) {\n        return axios.post(this.baseURL + '/product/delete', { ids: id });\n    }\n\n    // for Product Attribute : \n    static detailProductAttribute(id, data) {\n        return axios.get(this.baseURL + '/productAttribute/details/' + id, { params: data });\n    }\n    static listProductAttribute(data) {\n        return axios.get(this.baseURL + '/productAttribute/list', { params: data });\n    }\n    static saveProductAttribute(data, query) {\n        return axios.post(this.baseURL + \"/productAttribute/save\", data, { params: query });\n    }\n    static deleteProductAttribute(id) {\n        return axios.post(this.baseURL + '/productAttribute/delete', { ids: id });\n    }\n\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Tag } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../../services/ecomm';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\nimport util from '../../../utils/util';\nimport UploadImage from '../../../utils/UploadImage';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function SubCategory({ type, categoryId = null }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, categoryId });\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Slug',\n            dataIndex: 'slug',\n            width: 200,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this sub category?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.listSubCategory(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.deleteSubCategory(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            {\n                !categoryId\n                    ? <Typography.Title level={5}>List of Sub Categories</Typography.Title>\n                    : null\n            }\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, type, categoryId }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }) {\n\n    const [categories, setCategories] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listCategory({ isAll: 1, ln: 'en' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or slug\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item>\n                        <Select placeholder=\"Category\" value={qData.categoryId} onChange={v => { setQData({ ...qData, categoryId: v }) }} allowClear disabled={categoryId} >\n                            {\n                                categories.map(v => (\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                ))\n                            }\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected sub categories?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, categoryId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n    const [file, setFile] = useState([]);\n\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { status: true, categoryId }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailSubCategory(data.parentId || data._id, { ln }).then(res => {\n            setData(res.data || {});\n            setFile(res.data?.imgUrl ? [res.data?.imgUrl] : []);\n\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.saveSubCategory(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                if (ln === \"en\") {\n                    list();\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [ln, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setLn('en');\n            setFile([]);\n\n        }\n    }, [open]);\n    useEffect(() => {\n        handleChange({ imgUrl: file?.[0] });\n    }, [file]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Sub Category'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={600}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm, categoryId, file, setFile }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm, file, setFile }} />\n                                </Card>,\n                                disabled: !data._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm, file, setFile }} />\n                                </Card>,\n                                disabled: !data._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm, categoryId, file, setFile }) => {\n\n    const [categories, setCategories] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listCategory({ isAll: 1, ln: 'en' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\n        }\n    }, []);\n\n    useEffect(() => {\n        if (!data._id) {\n            handleChange({ slug: util.removeSpecialChars(data?.name || '') });\n        }\n    }, [data.name])\n\n   \n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Category\" required>\n                            <Select value={data.categoryId} onChange={v => { handleChange({ categoryId: v })}} disabled={categoryId} >\n                                {\n                                    categories.map(v => (\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={18}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm, file, setFile }) => {\n    const [categories, setCategories] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listCategory({ isAll: 1, ln: 'hi' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Select value={data.categoryId} disabled >\n                                {\n                                    categories.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={18}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} disabled >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} disabled/>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm, file, setFile }) => {\n    const [categories, setCategories] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listCategory({ isAll: 1, ln: 'gu' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Select value={data.categoryId} disabled >\n                                {\n                                    categories.map(v => (\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\n                                    ))\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={18}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} disabled>\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} disabled/>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Tag } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../../services/ecomm';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\nimport Subcategory from './SubCategory';\nimport util from '../../../utils/util';\nimport UploadImage from '../../../utils/UploadImage';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function Category() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n    const subCategoryModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Sub Category',\n            dataIndex: '_id',\n            width: 150,\n            render: (value, row) => (\n                <Button type=\"primary\" size=\"small\" onClick={() => { subCategoryModalRef.current.openForm({ name: row.name, _id: value }) }} >Sub Category</Button>\n            )\n        },\n        {\n            title: 'Slug',\n            dataIndex: 'slug',\n            width: 100,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this category?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.listCategory(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.deleteCategory(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Categories</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n            <SubCategoryModal ref={subCategoryModalRef} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or slug\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected categories?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n    const [file, setFile] = useState([]);\n\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { status: true }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailCategory(data.parentId || data._id, { ln }).then(res => {\n            setData(res.data || {});\n            setFile(res.data?.imgUrl ? [res.data?.imgUrl] : []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.saveCategory(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                if (ln === \"en\") {\n                    list();\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [ln, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setLn('en');\n            setFile([]);\n\n        }\n    }, [open]);\n    useEffect(() => {\n        handleChange({ imgUrl: file?.[0] });\n    }, [file]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Category'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={600}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm, file, setFile }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm, file, setFile }} />\n                                </Card>,\n                                disabled: !data._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm, file, setFile }} />\n                                </Card>,\n                                disabled: !data._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm, file, setFile }) => {\n\n    useEffect(() => {\n        if (!data._id) {\n            handleChange({ slug: util.removeSpecialChars(data?.name || '') });\n        }\n    }, [data.name])\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={18}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm, file, setFile }) => {\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={18}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} disabled >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} disabled />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm, file, setFile }) => {\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={18}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} disabled/>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} disabled >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} disabled />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst SubCategoryModal = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt);\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title={<>All sub categories of <Typography.Text type=\"danger\">{data.name}</Typography.Text></>}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onCancel={() => { setOpen(false); }}\n                maskClosable={false}\n                width={1400}\n                destroyOnClose\n                className=\"app-modal-body-overflow\"\n                footer={null}\n            >\n                <Subcategory {...{ type: data.type, categoryId: data._id }} />\n            </Modal>\n        </>\n    );\n});","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Tag } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../../services/ecomm';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\nimport util from '../../../utils/util';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function Attribute({ type, categoryId = null }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, categoryId });\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Unique Code',\n            dataIndex: 'code',\n            width: 200,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this attributes?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.listAttribute(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.deleteAttribute(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            {\n                !categoryId\n                    ? <Typography.Title level={5}>List of Profiles</Typography.Title>\n                    : null\n            }\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, type, categoryId }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected data?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, categoryId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { status: true, categoryId }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailAttribute(data.parentId || data._id, { ln }).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.saveAttribute(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                if (ln === \"en\") {\n                    list();\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [ln, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setLn('en');\n        }\n    }, [open]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Data'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={600}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm, categoryId }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !data._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !data._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm, categoryId }) => {\n\n    useEffect(() => {\n        if (!data._id) {\n            handleChange({ code: util.removeSpecialChars(data?.name || '') });\n        }\n    }, [data.name])\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Unique Code\" required>\n                            <Input placeholder=\"Unique Code\" value={data.code} onChange={e => { handleChange({ code: util.removeSpecialChars(e.target.value) }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\n                                <Select.Option value={true}>Active</Select.Option>\n                                <Select.Option value={false}>Inactive</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm }) => {\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Unique Code\" required>\n                            <Input placeholder=\"Unique Code\" value={data.code} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} disabled >\n                                <Select.Option value={true}>Active</Select.Option>\n                                <Select.Option value={false}>Inactive</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm }) => {\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Name\" required>\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Unique Code\" required>\n                            <Input placeholder=\"Unique Code\" value={data.code} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item label=\"Status\" required>\n                            <Select value={data.status} disabled >\n                                <Select.Option value={true}>Active</Select.Option>\n                                <Select.Option value={false}>Inactive</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Tabs, Card, Select } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../../services/ecomm';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function Products({ type, productId = null }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, productId });\n    const addNewModalRef = useRef();\n\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            render: (_, { attributeDetails }) => (\n                <span>{attributeDetails.name}</span>\n            )\n        },\n        {\n            title: 'Value',\n            dataIndex: 'value',\n            width: 200,\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this product attribute?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.listProductAttribute(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n\n    }\n\n    const deleteData = (id) => {\n        service.deleteProductAttribute(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        });\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n    return (\n        <>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                // scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, type, productId }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                {/* <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col> */}\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Reload</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected product attributes ?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, productId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { productId }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailProductAttribute(data.parentId || data._id, { ln }).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.saveProductAttribute(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                if (ln === \"en\") {\n                    list();\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [ln, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setLn('en');\n        }\n    }, [open]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Product Attribute'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={600}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !data._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\n                                </Card>,\n                                disabled: !data._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst EnForm = ({ data, handleChange, changeForm }) => {\n    const [attributes, setAttributes] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listAttribute({ isAll: 1, ln: 'en' }).then(res => { setAttributes(res.data || []); }).catch(err => { AntdMsg('Attribute data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={12}>\n                        <Form.Item label=\"Attribute\" required>\n                            <Select value={data.attributeId} onChange={v => { handleChange({ attributeId: v }) }} >\n                                {\n                                    attributes.map(v => <Select.Option value={v._id} key={v._id} label={v.name}>{v.name}</Select.Option>)\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Value\" required>\n                            <Input placeholder=\"Value\" value={data.value} onChange={e => { handleChange({ value: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm }) => {\n    const [attributes, setAttributes] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listAttribute({ isAll: 1, ln: 'hi' }).then(res => { setAttributes(res.data || []); }).catch(err => { AntdMsg('Attribute data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={12}>\n                        <Form.Item label=\"Attribute\" required>\n                            <Select value={data.attributeId} onChange={v => { handleChange({ attributeId: v }) }} >\n                                {\n                                    attributes.map(v => <Select.Option value={v.parentId} key={v.parentId} label={v.name}>{v.name}</Select.Option>)\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Value\" required>\n                            <Input placeholder=\"Value\" value={data.value} onChange={e => { handleChange({ value: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm }) => {\n    const [attributes, setAttributes] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listAttribute({ isAll: 1, ln: 'gu' }).then(res => { setAttributes(res.data || []); }).catch(err => { AntdMsg('Attribute data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={12}>\n                        <Form.Item label=\"Attribute\" required>\n                            <Select value={data.attributeId} onChange={v => { handleChange({ attributeId: v }) }} >\n                                {\n                                    attributes.map(v => <Select.Option value={v.parentId} key={v.parentId} label={v.name}>{v.name}</Select.Option>)\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Value\" required>\n                            <Input placeholder=\"Value\" value={data.value} onChange={e => { handleChange({ value: e.target.value }) }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Tag } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../../services/ecomm';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\nimport util from '../../../utils/util';\nimport UploadImage from '../../../utils/UploadImage';\nimport ProductAttribute from './ProductAttributes';\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function Products({ type, categoryId = null }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, categoryId });\n    const addNewModalRef = useRef();\n    const attributeModalRef = useRef();\n\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Slug',\n            dataIndex: 'slug',\n            width: 220,\n        },\n        {\n            title: 'Attributes',\n            dataIndex: '_id',\n            width: 150,\n            render: (value, row) => (\n                <Button type=\"primary\" size=\"small\" onClick={() => { attributeModalRef.current.openForm({ name: row.name, _id: value }) }}>Attributes</Button>\n            )\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this Product?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.listProduct(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.deleteProduct(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            {\n                !categoryId\n                    ? <Typography.Title level={5}>List of  Products</Typography.Title>\n                    : null\n            }\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, type, categoryId }} />\n            <AttributeModal ref={attributeModalRef} />\n\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }) {\n\n    const [categories, setCategories] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listCategory({ isAll: 1, ln: 'en' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or slug\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item>\n                        <Select placeholder=\"Category\" value={qData.categoryId} onChange={v => { setQData({ ...qData, categoryId: v }) }} allowClear disabled={categoryId} >\n                            {\n                                categories.map(v => (\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                ))\n                            }\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected Product?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, categoryId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [ln, setLn] = useState('en');\n    const [changeForm, setChangeForm] = useState(false);\n    const [file, setFile] = useState([]);\n    const [thumbFile, setThumbFile] = useState([]);\n\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { status: true, categoryId }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailProduct(data.parentId || data._id, { ln }).then(res => {\n            setData(res.data || {});\n            setFile(res.data?.imgUrls || []);\n            setThumbFile(res.data?.thumbImgUrl || []);\n\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.saveProduct(data, { ln }).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                if (ln === \"en\") {\n                    list();\n                }\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [ln, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setLn('en');\n            setFile([]);\n            setThumbFile([]);\n\n        }\n    }, [open]);\n    useEffect(() => {\n        handleChange({ imgUrls: file });\n        handleChange({ imgUrl: thumbFile?.[0] });\n    }, [file, thumbFile]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Product'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={1200}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\n                        items={[\n                            {\n                                label: \"English\",\n                                key: \"en\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <EnForm {...{ data, handleChange, save, changeForm, categoryId, file, setFile, thumbFile, setThumbFile }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"हिन्दी\",\n                                key: \"hi\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <HiForm {...{ data, handleChange, save, changeForm, file, setFile, thumbFile, setThumbFile }} />\n                                </Card>,\n                                disabled: !data._id\n                            },\n                            {\n                                label: \"ગુજરાતી\",\n                                key: \"gu\",\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <GuForm {...{ data, handleChange, save, changeForm, file, setFile, thumbFile, setThumbFile }} />\n                                </Card>,\n                                disabled: !data._id\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\n\nconst EnForm = ({ data, handleChange, changeForm, categoryId, file, setFile, thumbFile, setThumbFile }) => {\n\n    const [categories, setCategories] = useState([]);\n    const [subCategories, setSubCategories] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listCategory({ isAll: 1, ln: 'en' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\n            service.listSubCategory({ isAll: 1, ln: 'en' }).then(res => { setSubCategories(res.data || []); }).catch(err => { AntdMsg('Sub categories data not loaded', 'error'); });\n        }\n    }, []);\n\n    useEffect(() => {\n        if (!data._id) {\n            handleChange({ slug: util.removeSpecialChars(data?.name || '') });\n        }\n    }, [data.name])\n\n    useEffect(() => {\n        if (subCategories.length) {\n            let filterdData = subCategories?.filter(item => data?.categoryIds?.includes(item.categoryId) && data.subCategoryIds?.includes(item._id));\n            handleChange({ subCategoryIds: filterdData.map(v => v._id) || [] })\n        }\n    }, [data.categoryIds || subCategories]);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={3}>\n                        <Form.Item label=\"Thumbnail Photo\">\n                            <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={21}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} count={10} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Choose Categories\" required>\n                            <Select\n                                mode=\"multiple\"\n                                style={{\n                                    width: '100%',\n                                }}\n                                placeholder=\"Select Categories\"\n                                onChange={v => { handleChange({ categoryIds: v }) }}\n                                value={data.categoryIds}\n                                optionLabelProp=\"label\"\n                                allowClear={true}\n                            >\n                                {categories.map((v) => <Select.Option key={v._id} value={v._id} label={v.name}>{v.name}</Select.Option>)}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Choose Sub Categories\" required>\n                            <Select\n                                mode=\"multiple\"\n                                style={{\n                                    width: '100%',\n                                }}\n                                placeholder=\"Select Sub Categories\"\n                                onChange={v => { handleChange({ subCategoryIds: v }) }}\n                                value={data.subCategoryIds}\n                                optionLabelProp=\"label\"\n                                allowClear={true}\n                            >\n                                {\n                                    subCategories.filter(v => data?.categoryIds?.includes(v.categoryId)).map((v) => <Select.Option key={v._id} value={v._id} label={v.name}>{v.name}</Select.Option>)\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Row gutter={[12, 2]}>\n                        <Col span={12}>\n                            <Form.Item label=\"Name\" required>\n                                <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Slug\" required>\n                                <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                            <Form.Item label=\"Description\" required>\n                                <Input.TextArea placeholder=\"Write product description...\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item label=\"Price\" required>\n                                <Input type=\"text\" placeholder=\"500\" value={data.price} onChange={e => { handleChange({ price: util.handleInteger(e.target.value) }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item label=\"Actual Price\" required>\n                                <Input type=\"text\" placeholder=\"450\" value={data.actualPrice} onChange={e => { handleChange({ actualPrice: util.handleInteger(e.target.value) }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item label=\"HSN code\" required>\n                                <Input placeholder=\"HSN code\" value={data.hsn_code} onChange={e => { handleChange({ hsn_code: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item label=\"Inventory\" required>\n                                <Input type=\"text\" placeholder=\"Inventory\" value={data.inventory} onChange={e => { handleChange({ inventory: util.handleInteger(e.target.value) }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Meta Title\" required>\n                                <Input placeholder=\"Enter meta title\" value={data.metaTitle} onChange={e => { handleChange({ metaTitle: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Meta Tag\" required>\n                                <Input placeholder=\"Enter meta tag\" value={data.metaTag} onChange={e => { handleChange({ metaTag: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                            <Form.Item label=\"Meta Description\" required>\n                                <Input.TextArea placeholder=\"Write product meta description...\" value={data.metaDescription} onChange={e => { handleChange({ metaDescription: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n\n                        <Col span={6}>\n                            <Form.Item label=\"Status\" required>\n                                <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\n                                    <Select.Option value={true}>Active</Select.Option>\n                                    <Select.Option value={false}>Inactive</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst HiForm = ({ data, handleChange, changeForm, file, setFile, thumbFile, setThumbFile }) => {\n    const [categories, setCategories] = useState([]);\n    const [subCategories, setSubCategories] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listCategory({ isAll: 1, ln: 'hi' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\n            service.listSubCategory({ isAll: 1, ln: 'hi' }).then(res => { setSubCategories(res.data || []); }).catch(err => { AntdMsg('Sub categories data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={3}>\n                        <Form.Item label=\"Thumbnail Photo\">\n                            <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={21}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} count={10} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Choose Categories\" required>\n                            <Select\n                                mode=\"multiple\"\n                                style={{\n                                    width: '100%',\n                                }}\n                                placeholder=\"Select Categories\"\n                                disabled\n                                value={data.categoryIds || []}\n                                optionLabelProp=\"label\"\n                                allowClear={true}\n                            >\n                                {categories.map((v) => <Select.Option key={v.parentId} value={v.parentId} label={v.name} >{v.name}</Select.Option>)}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Choose Sub Categories\" required>\n                            <Select\n                                mode=\"multiple\"\n                                style={{\n                                    width: '100%',\n                                }}\n                                placeholder=\"Select Sub Categories\"\n                                disabled\n                                value={data.subCategoryIds}\n                                optionLabelProp=\"label\"\n                                allowClear={true}\n                            >\n                                {\n                                    subCategories.filter(v => data?.categoryIds?.includes(v.categoryId)).map((v) =>\n                                        <Select.Option key={v.parentId} value={v.parentId} label={v.name}>{v.name}</Select.Option>\n                                    )\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Row gutter={[12, 2]}>\n                        <Col span={12}>\n                            <Form.Item label=\"Name\" required>\n                                <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Slug\" required>\n                                <Input placeholder=\"Slug\" value={data.slug} disabled />\n                            </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                            <Form.Item label=\"Description\" required>\n                                <Input.TextArea placeholder=\"Write product description...\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item label=\"Price\" required>\n                                <Input type=\"text\" placeholder=\"500\" value={data.price} onChange={e => { handleChange({ price: util.handleInteger(e.target.value) }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item label=\"Actual Price\" required>\n                                <Input type=\"text\" placeholder=\"450\" value={data.actualPrice} onChange={e => { handleChange({ actualPrice: util.handleInteger(e.target.value) }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item label=\"HSN code\" required>\n                                <Input placeholder=\"HSN code\" value={data.hsn_code} disabled />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item label=\"Inventory\" required>\n                                <Input type=\"text\" placeholder=\"Inventory\" value={data.inventory} onChange={e => { handleChange({ inventory: util.handleInteger(e.target.value) }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Meta Title\" required>\n                                <Input placeholder=\"Enter meta title\" value={data.metaTitle} onChange={e => { handleChange({ metaTitle: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Meta Tag\" required>\n                                <Input placeholder=\"Enter meta tag\" value={data.metaTag} onChange={e => { handleChange({ metaTag: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                            <Form.Item label=\"Meta Description\" required>\n                                <Input.TextArea placeholder=\"Write product meta description...\" value={data.metaDescription} onChange={e => { handleChange({ metaDescription: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n\n                        <Col span={6}>\n                            <Form.Item label=\"Status\" required>\n                                <Select value={data.status} disabled >\n                                    <Select.Option value={true}>Active</Select.Option>\n                                    <Select.Option value={false}>Inactive</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst GuForm = ({ data, handleChange, changeForm, file, setFile, thumbFile, setThumbFile }) => {\n    const [categories, setCategories] = useState([]);\n    const [subCategories, setSubCategories] = useState([]);\n    useEffect(() => {\n        if (viewAccess) {\n            service.listCategory({ isAll: 1, ln: 'gu' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\n            service.listSubCategory({ isAll: 1, ln: 'gu' }).then(res => { setSubCategories(res.data || []); }).catch(err => { AntdMsg('Sub categories data not loaded', 'error'); });\n        }\n    }, []);\n\n    return (\n        <>\n            <Form layout=\"vertical\" disabled={!changeForm}>\n                <Row gutter={[12, 2]}>\n                    <Col span={3}>\n                        <Form.Item label=\"Thumbnail Photo\">\n                            <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={21}>\n                        <Form.Item label=\"Photo\">\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} count={10} disabled />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Choose Categories\" required>\n                            <Select\n                                mode=\"multiple\"\n                                style={{\n                                    width: '100%',\n                                }}\n                                placeholder=\"Select Categories\"\n                                disabled\n                                value={data.categoryIds || []}\n                                optionLabelProp=\"label\"\n                                allowClear={true}\n                            >\n                                {categories.map((v) => <Select.Option key={v.parentId} value={v.parentId} label={v.name} >{v.name}</Select.Option>)}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Choose Sub Categories\" required>\n                            <Select\n                                mode=\"multiple\"\n                                style={{\n                                    width: '100%',\n                                }}\n                                placeholder=\"Select Sub Categories\"\n                                disabled\n                                value={data.subCategoryIds}\n                                optionLabelProp=\"label\"\n                                allowClear={true}\n                            >\n                                {\n                                    subCategories.filter(v => data?.categoryIds?.includes(v.categoryId)).map((v) =>\n                                        <Select.Option key={v.parentId} value={v.parentId} label={v.name}>{v.name}</Select.Option>\n                                    )\n                                }\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Row gutter={[12, 2]}>\n                        <Col span={12}>\n                            <Form.Item label=\"Name\" required>\n                                <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Slug\" required>\n                                <Input placeholder=\"Slug\" value={data.slug} disabled />\n                            </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                            <Form.Item label=\"Description\" required>\n                                <Input.TextArea placeholder=\"Write product description...\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item label=\"Price\" required>\n                                <Input type=\"text\" placeholder=\"500\" value={data.price} onChange={e => { handleChange({ price: util.handleInteger(e.target.value) }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item label=\"Actual Price\" required>\n                                <Input type=\"text\" placeholder=\"450\" value={data.actualPrice} onChange={e => { handleChange({ actualPrice: util.handleInteger(e.target.value) }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item label=\"HSN code\" required>\n                                <Input placeholder=\"HSN code\" value={data.hsn_code} disabled />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item label=\"Inventory\" required>\n                                <Input type=\"text\" placeholder=\"Inventory\" value={data.inventory} onChange={e => { handleChange({ inventory: util.handleInteger(e.target.value) }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Meta Title\" required>\n                                <Input placeholder=\"Enter meta title\" value={data.metaTitle} onChange={e => { handleChange({ metaTitle: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Meta Tag\" required>\n                                <Input placeholder=\"Enter meta tag\" value={data.metaTag} onChange={e => { handleChange({ metaTag: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                            <Form.Item label=\"Meta Description\" required>\n                                <Input.TextArea placeholder=\"Write product meta description...\" value={data.metaDescription} onChange={e => { handleChange({ metaDescription: e.target.value }) }} />\n                            </Form.Item>\n                        </Col>\n\n                        <Col span={6}>\n                            <Form.Item label=\"Status\" required>\n                                <Select value={data.status} disabled >\n                                    <Select.Option value={true}>Active</Select.Option>\n                                    <Select.Option value={false}>Inactive</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\n\nconst AttributeModal = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt);\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title={<>Attributes of <Typography.Text type=\"danger\">{data.name}</Typography.Text></>}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onCancel={() => { setOpen(false); }}\n                maskClosable={false}\n                width={800}\n                destroyOnClose\n                className=\"app-modal-body-overflow\"\n                footer={null}\n            >\n                <ProductAttribute {...{ type: data.type, productId: data._id }} />\n            </Modal>\n        </>\n    );\n});\n","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'jain-world';\n\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport moment from \"moment\";\nimport service from '../../../services/jainWorld';\nimport userService from '../../../services/user';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\nimport UploadImage from '../../../utils/UploadImage';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function MyImage() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\n    const [users, setUsers] = useState([]);\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Image',\n            dataIndex: 'fileUrl',\n            render: (v) => {\n                return <Image src={v?.url} height={80} />\n            }\n        },\n        {\n            title: 'Uploaded At',\n            dataIndex: 'createdAt',\n            width: 400,\n            render: (v) => {\n                return moment(v).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\n            }\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this image?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.list(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        if (viewAccess) {\n            userService.list({ isAll: 1 }).then(res => { setUsers(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\n        }\n    }, []);\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Jinalayas</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, users }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        {/* <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear /> */}\n                    </Form.Item>\n                </Col>\n                {/* <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col> */}\n                <Col span={5}>\n                    {/* {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    } */}\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected images?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, users } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [changeForm, setChangeForm] = useState(false);\n    const [fileList, setFileList] = useState([]);\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { fileType: 'photo' }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data.parentId || data._id ).then(res => {\n            setData(res.data || {});\n            setFileList(res.data?.fileUrl ? [res.data?.fileUrl] : []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.save(data).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                list();\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setFileList([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        handleChange({ fileUrl: fileList?.[0] });\n    }, [fileList]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Jinalaya'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={300}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\" disabled={!changeForm}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"User\">\n                                    <Select value={data.userId} onChange={v => { handleChange({ 'userId': v }) }} >\n                                        {\n                                            users.map(v => (\n                                                <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                            ))\n                                        }\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Photo\">\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Upload, Button } from \"antd\";\nimport { UploadOutlined } from '@ant-design/icons';\n\nimport fileService from \"../services/file\";\nimport React from \"react\";\n\nexport default function UploadImage({ fileList, setFileList, count = 1, disabled = false }) {\n    const uploadImage = async options => {\n        const { onSuccess, onError, file, onProgress } = options;\n\n        const fmData = new FormData();\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\n        fmData.append(\"file\", file);\n        try {\n            fileService.save(fmData, config).then(res => {\n                onSuccess(\"Ok\");\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\n            })\n        } catch (err) {\n            onError({ err });\n        }\n    };\n\n    const handleOnChange = ({ file, fl }) => {\n        if (typeof fl !== typeof []) {\n            fl = [];\n        }\n        setFileList(fl);\n\n    };\n    const handleRemove = (file) => {\n        fileService.remove({ uid: file.uid }).then(res => {\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\n        })\n    };\n\n    return <Upload\n        accept=\"video/*\"\n        customRequest={uploadImage}\n        onChange={handleOnChange}\n        onRemove={handleRemove}\n        // listType=\"picture-card\"\n        fileList={fileList}\n        className=\"image-upload-grid\"\n        disabled={disabled}\n    >\n        {fileList?.length >= count ? null :     <Button icon={<UploadOutlined />}>Upload</Button>}\n    </Upload>\n\n};","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport moment from \"moment\";\nimport service from '../../../services/jainWorld';\nimport userService from '../../../services/user';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\nimport UploadVideo from '../../../utils/UploadVideo';\n\nconst viewAccess = true;\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\n\nexport default function MyVideo() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'video' });\n    const [users, setUsers] = useState([]);\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Image',\n            dataIndex: 'fileUrl',\n            render: (v) => {\n                return (\n                    <>\n                        <video height=\"80\" controls>\n                            <source src={v?.url} type=\"video/mp4\" />\n                        </video>\n                    </>\n                );\n\n            }\n        },\n        {\n            title: 'Uploaded At',\n            dataIndex: 'createdAt',\n            width: 400,\n            render: (v) => {\n                return moment(v).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\n            }\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\n            render: (v, row) => {\n                return <>\n                    {\n                        deleteAccess\n                            ? <Popconfirm\n                                title=\"Are you sure to delete this video?\"\n                                onConfirm={() => { deleteData(row._id); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                            </Popconfirm>\n                            : null\n                    }\n\n                    {\n                        editAccess\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                    {\n                        !editAccess && viewAccess\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                            : null\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            service.list(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        if (viewAccess) {\n            userService.list({ isAll: 1 }).then(res => { setUsers(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\n        }\n    }, []);\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of Jinalayas</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, users }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        {/* <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear /> */}\n                    </Form.Item>\n                </Col>\n                {/* <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col> */}\n                <Col span={5}>\n                    {\n                        addAccess\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                            </Form.Item>\n                            : null\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected videos?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, users } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [changeForm, setChangeForm] = useState(false);\n    const [fileList, setFileList] = useState([]);\n\n\n    const handleChange = (value) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { fileType: 'video' }\n            );\n            if (!dt?._id && addAccess) {\n                setChangeForm(true);\n            } else if (dt._id && editAccess) {\n                setChangeForm(true);\n            } else {\n                setChangeForm(false);\n            }\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data.parentId || data._id).then(res => {\n            setData(res.data || {});\n            setFileList(res.data?.fileUrl ? [res.data?.fileUrl] : []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (changeForm) {\n            setAjxRequesting(true);\n            service.save(data).then((res) => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                list();\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setFileList([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        handleChange({ fileUrl: fileList?.[0] });\n    }, [fileList]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Jinalaya'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={300}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\" disabled={!changeForm}>\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"User\">\n                                    <Select value={data.userId} onChange={v => { handleChange({ 'userId': v }) }} >\n                                        {\n                                            users.map(v => (\n                                                <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\n                                            ))\n                                        }\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Video\">\n                                    <UploadVideo {...{ fileList, setFileList }} count={1} />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});","import { AppstoreOutlined, DashboardOutlined, UserOutlined, BorderOutlined, BankOutlined, ApartmentOutlined, CalendarOutlined } from '@ant-design/icons';\nimport commonObj from '../../commonObj';\nimport Dashboard from '../pages/Dashboard';\nimport Module from '../pages/Module';\nimport Profile from '../pages/user/Profile';\nimport ChangePassword from '../pages/user/ChangePassword';\nimport SubAdmin from '../pages/SubAdmin';\nimport Bhagwan from '../pages/Bhagwan';\nimport Jinalaya from '../pages/temple/Jinalaya';\nimport Shala from '../pages/temple/Shala';\nimport State from '../pages/location/State';\nimport District from '../pages/location/District';\nimport City from '../pages/location/City';\nimport Kalyanak from '../pages/temple/Kalyanak';\nimport Event from '../pages/Event';\nimport Job from '../pages/jobPortal/Job';\nimport JobSeeker from '../pages/jobPortal/JobSeeker';\nimport User from '../pages/User';\n\nimport EcommCategory from \"../pages/ecomm/Category\"\nimport EcommSubCategory from \"../pages/ecomm/SubCategory\"\nimport EcommAttribute from \"../pages/ecomm/Attribute\"\nimport EcommProduct from \"../pages/ecomm/Products\"\nimport JainWorldImage from '../pages/jainWorld/Image';\nimport JainWorldVideo from '../pages/jainWorld/Video';\nimport SingerType from '../pages/music/SingerType';\nimport Singer from '../pages/music/Singer';\nimport SongCategory from '../pages/music/SongCategory';\nimport Song from '../pages/music/Song';\nconst { userType } = commonObj;\n\n\nconst routes = [\n    { title: 'Dashboard', icon: DashboardOutlined, url: '/', component: Dashboard, hidden: userType !== 'superAdmin' },\n    { title: 'Modules', icon: AppstoreOutlined, url: '/modules', component: Module, hidden: userType !== 'superAdmin' },\n    { title: 'Sub Admins', icon: AppstoreOutlined, url: '/sub-admins', component: SubAdmin, hidden: userType !== 'superAdmin' },\n    { title: 'Users', icon: AppstoreOutlined, url: '/users', component: User, hidden: userType !== 'superAdmin' },\n    { title: 'Bhagwan', icon: AppstoreOutlined, url: '/bhagwans', component: Bhagwan, hidden: userType !== 'superAdmin' },\n    {\n        title: 'Location', icon: BankOutlined, url: '/location', children: [\n            { title: 'State', icon: ApartmentOutlined, url: '/', component: State },\n            { title: 'District', icon: ApartmentOutlined, url: '/district', component: District },\n            { title: 'City', icon: ApartmentOutlined, url: '/city', component: City },\n        ]\n    },\n    {\n        title: 'Temples', icon: BankOutlined, url: '/temples', children: [\n            { title: 'Jinalaya', icon: ApartmentOutlined, url: '/', component: Jinalaya },\n            { title: 'Bhojan Shala', icon: ApartmentOutlined, url: '/bhojan-shala', component: () => <Shala type=\"bhojanShala\" /> },\n            { title: 'Dharm Shala', icon: ApartmentOutlined, url: '/dharm-shala', component: () => <Shala type=\"dharmShala\" /> },\n            { title: 'Path Shala', icon: ApartmentOutlined, url: '/path-shala', component: () => <Shala type=\"pathShala\" /> },\n            { title: 'Ayambi Shala', icon: ApartmentOutlined, url: '/ayambi-shala', component: () => <Shala type=\"ayambiShala\" /> },\n            { title: 'Kalyanak', icon: ApartmentOutlined, url: '/kalyanak', component: Kalyanak },\n        ]\n    },\n    { title: 'Event', icon: CalendarOutlined, url: '/events', component: Event },\n    {\n        title: 'Job Portal', icon: BankOutlined, url: '/job-portal', children: [\n            { title: 'Job', icon: ApartmentOutlined, url: '/', component: Job },\n            { title: 'Job Seeker', icon: ApartmentOutlined, url: '/job-seekrs', component: JobSeeker },\n        ]\n    },\n    {\n        title: 'Ecomm', icon: BankOutlined, url: '/ecomm', children: [\n            { title: 'Category', icon: ApartmentOutlined, url: '/category', component: EcommCategory },\n            { title: 'Sub Category', icon: ApartmentOutlined, url: '/sub-category', component: EcommSubCategory },\n            { title: 'Attributes', icon: ApartmentOutlined, url: '/attribute', component: EcommAttribute },\n            { title: 'Products', icon: ApartmentOutlined, url: '/products', component: EcommProduct },\n        ]\n    },\n    {\n        title: 'Music', icon: BankOutlined, url: '/music', children: [\n            { title: 'Singer Type', icon: ApartmentOutlined, url: '/singer-type', component: SingerType },\n            { title: 'Singer', icon: ApartmentOutlined, url: '/singer', component: Singer },\n            { title: 'Song Category', icon: ApartmentOutlined, url: '/song-category', component: SongCategory },\n            { title: 'Song', icon: ApartmentOutlined, url: '/song', component: Song },\n        ]\n    },\n    {\n        title: 'Jain World', icon: BankOutlined, url: '/jain-world', children: [\n            { title: 'Image', icon: ApartmentOutlined, url: '/image', component: JainWorldImage },\n            { title: 'Video', icon: ApartmentOutlined, url: '/video', component: JainWorldVideo },\n        ]\n    },\n    {\n        title: 'Profile', icon: UserOutlined, url: '/profile', children: [\n            { title: 'Your Profile', icon: UserOutlined, url: '/', component: Profile },\n            { title: 'Change Password', icon: BorderOutlined, url: '/change-password', component: ChangePassword },\n        ]\n    },\n].filter(v => (!v.hidden) || v.children?.length);\n\nexport default routes;","export default function SingerType(){\n\n}","export default function Singer(){\n\n}","export default function SongCategory(){\n\n}","export default function Song(){\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Form, Spin, Row, Col, PageHeader, Typography, Divider, Switch, Button } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport greetingTime from 'greeting-time';\n\nimport React, { useEffect, useState } from 'react';\nimport service from '../../../services/user';\nimport { AntdMsg } from '../../../utils/Antd';\nimport UploadImage from '../../../utils/UploadImage';\n\nexport default function Profile() {\n\n    const [data, setData] = useState({});\n    const [fileList, setFileList] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [doSave, setDoSave] = useState(false);\n\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\n\n    function list() {\n        setLoading(true);\n        service.profile().then(res => {\n            setData(res.data.result || {});\n            if(res.data.result?.avatar){\n                setFileList([res.data.result?.avatar]);\n            }\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    useEffect(() => {\n        list();\n    }, []);\n\n    useEffect(() => {\n        updateProfile();\n    }, [data]);\n\n    function updateProfile() {\n        if (doSave) {\n            setLoading(true);\n            service.saveProfile(data).then(res => {\n                AntdMsg(res.message);\n            }).catch(err => {\n                AntdMsg(err.message, 'error');\n            }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    useEffect(() => {\n        handleChange(fileList?.[0], 'avatar');\n    }, [fileList]);\n\n    return (\n        <>\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                <PageHeader\n                    title={greetingTime(new Date()) + ', ' + data?.name}\n                    extra={[<Switch key={'do-save'} checkedChildren=\"Update\" unCheckedChildren=\"Update\" checked={doSave} onChange={v => { setDoSave(v) }} />]}\n                />\n                <Divider />\n                <Form layout=\"vertical\">\n                    <Row gutter={[12, 2]}>\n                        <Col span={16}>\n                            <Row gutter={[12, 10]}>\n                                <Col span={12}>\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Name</Typography.Text>}>\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'name'); } }} level={5} >\n                                            {data.name}\n                                        </Typography.Title>\n                                        <Divider style={{ margin: 0 }} />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12}>\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">User Name</Typography.Text>}>\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'userName'); } }} level={5} >\n                                            {data.userName}\n                                        </Typography.Title>\n                                        <Divider style={{ margin: 0 }} />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12}>\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Email</Typography.Text>}>\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'email'); } }} level={5} >\n                                            {data.email}\n                                        </Typography.Title>\n                                        <Divider style={{ margin: 0 }} />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12}>\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Phone Number</Typography.Text>}>\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'phone'); } }} level={5} >\n                                            {data.phone}\n                                        </Typography.Title>\n                                        <Divider style={{ margin: 0 }} />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col span={8}>\n                            <UploadImage {...{ fileList, setFileList }} disabled={!doSave} cropImage />\n                        </Col>\n                    </Row>\n                </Form>\n            </Spin>\n        </>\n    );\n};","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Form, Spin, Row, Col, PageHeader, Divider, Input, Button } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport greetingTime from 'greeting-time';\n\nimport React, { useState } from 'react';\nimport service from '../../../services/user';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\n\nexport default function Profile() {\n\n    const [data, setData] = useState({name: commonObj.name});\n    const [loading, setLoading] = useState(false);\n\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\n\n    function save() {\n        setLoading(true);\n        service.updatePassword(data).then(res => {\n            AntdMsg(res.message);\n            setData({});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    return (\n        <>\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                <PageHeader title={greetingTime(new Date()) + ', ' + data?.name} />\n                <Divider />\n                <Form layout=\"vertical\">\n                    <Row gutter={[12, 2]}>\n                        <Col span={8}>\n                            <Form.Item label=\"Current Password\">\n                                <Input.Password placeholder=\"Current Password\" value={data.currentPassword} onChange={e => { handleChange(e.target.value, 'currentPassword'); }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={16}></Col>\n\n                        <Col span={8}>\n                            <Form.Item label=\"New Password\">\n                                <Input.Password placeholder=\"New Password\" value={data.newPassword} onChange={e => { handleChange(e.target.value, 'newPassword'); }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={16}></Col>\n                        <Col span={8}>\n                            <Form.Item label=\"Confirm New Password\">\n                                <Input.Password placeholder=\"Confirm New Password\" value={data.confirmNewPassword} onChange={e => { handleChange(e.target.value, 'confirmNewPassword'); }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={16}></Col>\n                        <Col span={8}>\n                            <Form.Item>\n                                {\n                                    data.currentPassword && data.newPassword && data.confirmNewPassword\n                                        ? <Button type=\"primary\" style={{ width: '100%' }} htmlType=\"submit\" onClick={save} >Update Password</Button>\n                                        : null\n                                }\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Spin>\n        </>\n    );\n};","import { Menu } from 'antd';\nimport React from 'react';\nimport routes from './route';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst items = [...routes];\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\n    arr.forEach((v, i) => {\n        if (v.children?.length) {\n            arr[i] = {\n                ...arr[i],\n                key: prevBaseUrl + v.url,\n                icon: <v.icon />,\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\n            }\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\n        } else {\n            arr[i] = {\n                ...v,\n                key: prevBaseUrl + v.url,\n                icon: <v.icon />,\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\n            }\n        }\n    })\n}\nconvertMultiToSingle(items);\n\nconst App = () => {\n    const paths = [];\n    useLocation().pathname.split('/')?.reduce((prev, cur) => {\n        paths.push(prev + '/' + cur);\n        return prev + '/' + cur;\n    });\n\n    return (\n        <>\n            {\n                <Menu\n                    defaultSelectedKeys={[paths.pop()]}\n                    defaultOpenKeys={[...paths]}\n                    mode=\"inline\"\n                    // theme=\"dark\"\n                    items={items}\n                    style={{ height: '100vh' }}\n                />\n            }\n        </>\n    );\n};\n\nexport default App;","import { Breadcrumb } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport routes from \"./route\";\n\n\nconst newRoutes = [];\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\n    arr.forEach(v => {\n        if (v.children) {\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\n        }\n        newRoutes.push({ title: v.title, url: prevBaseUrl + v.url })\n    })\n}\nconvertMultiToSingle([...routes]);\n\nexport default function MyBreadcrumb() {\n    const location = useLocation().pathname;\n    const [breads, setBreads] = useState([]);\n    useEffect(() => {\n        const paths = [];\n        location.split('/')?.reduce((prev, cur) => {\n            paths.push(prev + '/' + cur);\n            return prev + '/' + cur;\n        });\n        setBreads(newRoutes.filter(v => paths.includes(v.url)).reverse());\n    }, [location]);\n\n    return (\n        <Breadcrumb separator=\"\">\n            {\n                breads?.map((v, i) => {\n                    if (i === breads.length - 1) {\n                        return <Breadcrumb.Item key={v.url}>{v.title}</Breadcrumb.Item>\n                    } else {\n                        return <React.Fragment key={v.url}>\n                            <Breadcrumb.Item><Link to={v.url + '/'}>{v.title}</Link></Breadcrumb.Item>\n                            <Breadcrumb.Separator>/</Breadcrumb.Separator>\n                        </React.Fragment>\n                    }\n                })\n            }\n        </Breadcrumb>\n    )\n};\n","import { Result, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Error404() {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\n        />\n    );\n}\n\n","import { Avatar, Layout, Menu, Image } from \"antd\";\nimport { UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport commonObj from \"../../commonObj\";\n\n\n\n\nexport default function Top() {\n\n    const items = [\n        {\n            label: commonObj?.name ? commonObj.name : 'You',\n            icon: <Avatar shape=\"circle\" size={32}\n                src={\n                    commonObj?.avatar?.url\n                        ?\n                        <Image\n                            src={commonObj?.avatar.url}\n                            style={{\n                                width: 32,\n                            }}\n                            preview={false}\n                        />\n                        : null\n                }\n                icon={!commonObj?.avatar?.url ? <UserOutlined /> : null}\n            />,\n            key: 'profile',\n        },\n        {\n            label: 'Logout',\n            icon: <LogoutOutlined />,\n            key: 'logout',\n            style: { color: 'red' },\n            onClick: () => { window.localStorage.clear(); window.location.reload(); }\n        },\n    ];\n\n    return (\n        <>\n            <Layout.Header style={{ padding: 0, height: 'auto' }} >\n                <Menu mode=\"horizontal\" items={items} style={{ lineHeight: '46px' }} />\n            </Layout.Header>\n        </>\n    );\n\n}","import React, { useState } from \"react\";\nimport { Card, Layout } from \"antd\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Menu from \"./Menu\";\nimport routes from \"./route\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport Error404 from \"../pages/errors/Error404\";\nimport Top from \"./Top\";\n\n\nconst newRoutes = [];\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\n    arr.forEach(v => {\n        if (v.children) {\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\n        } else {\n            newRoutes.push({ ...v, url: prevBaseUrl + v.url })\n        }\n    })\n}\nconvertMultiToSingle([...routes]);\n\n\nexport default function MyLayout() {\n    const [collapsed, setCollapsed] = useState(false);\n\n    return (\n        <>\n            <Layout style={{ minHeight: '100vh' }}>\n                <Layout.Sider\n                    width={250}\n                    collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}\n                    style={{\n                        overflow: 'auto',\n                        height: '100vh',\n                        position: 'fixed',\n                        left: 0,\n                        top: 0,\n                        bottom: 0,\n                        maxWidth: '300px!important',\n                        width: '300px!important'\n                    }}\n                >\n                    <div className=\"logo\" />\n                    <Menu />\n                </Layout.Sider>routes\n                <Layout className=\"site-layout\">\n                    <Top />\n\n                    <Layout.Content\n                        style={{\n                            margin: '24px 16px 0 240px',\n                            overflow: 'initial',\n                            marginLeft: !collapsed ? '230px' : '60px'\n                        }}\n                    >\n                        <Breadcrumb />\n                        <Card bordered>\n                            <Routes>\n                                {newRoutes.map((v) => <Route path={v.url} key={v.url} element={<v.component />} />)}\n                                <Route path={'*'} element={<Error404 />} />\n                            </Routes>\n                        </Card>\n                    </Layout.Content>\n                </Layout>\n            </Layout>\n        </>\n    );\n\n}"],"names":["style","textAlign","service","data","axios","this","baseURL","params","id","ids","MyPagination","props","qData","setQData","total","showTotal","start","page","limit","end","pageSize","current","onChange","pp","showSizeChanger","Search","addModalRef","selected","deleteData","list","onSubmitCapture","className","gutter","span","marginBottom","placeholder","value","key","e","target","allowClear","type","htmlType","float","icon","PlusOutlined","onClick","openForm","length","title","onConfirm","okText","cancelText","danger","DeleteOutlined","AddForm","forwardRef","ref","useState","ajxRequesting","setAjxRequesting","open","setOpen","setData","useImperativeHandle","dt","status","handleChange","v","k","save","then","res","AntdMsg","message","catch","err","Object","keys","finally","useEffect","_id","util","top","onOk","okButtonProps","disabled","onCancel","destroyOnClose","maskClosable","width","footer","spinning","indicator","LoadingOutlined","fontSize","spin","layout","label","required","code","url","config","UploadImage","fileList","setFileList","count","cropImage","uploadImage","options","onSuccess","onError","file","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","append","fileService","uid","name","handleOnChange","fl","handleRemove","aspect","shape","quality","rotate","accept","customRequest","onRemove","listType","addNewModalRef","modules","userName","password","phone","email","query","addAccess","commonObj","includes","editAccess","deleteAccess","Kalyanak","bhagwanId","jinalayaId","loading","setLoading","setSelected","isPopulate","useRef","columns","dataIndex","render","bhagwanDetails","hidden","row","size","EditOutlined","EyeOutlined","filter","item","map","extra","tableColumns","ellipsis","fixed","tableProps","bordered","showHeader","rowSelection","selectedRowKeys","tableLayout","undefined","level","pagination","position","dataSource","scroll","y","x","jinalayas","setJinalayas","bhagwan","setBhagwan","jinalayaService","isAll","ln","bhagwanService","setLn","changeForm","setChangeForm","entries","forEach","ent","varDt","split","i","parseInt","parentId","imgUrls","activeKey","items","children","borderTop","EnForm","HiForm","GuForm","tithi","jaap","birth","bc","destroyInactiveTabPane","moment","format","ad","KalyanakModal","Shala","isActive","color","timing","contactDetails","parkingFacilities","available","remarks","distanceFrom","restRoomFacility","bathroom","toilet","locker","foundation","dharmShalaExt","acRoom","nonAcRoom","acHall","nonAcHall","totalFloor","liftFacilities","pathShalaExt","totalStudents","ayambiShalaExt","facilities","orientation","plain","labharthi","address","rows","location","coordinates","number","MinusOutlined","vv","ii","height","optionType","buttonStyle","custom","morning","afternoon","evening","allDay","checked","upashray","historyDetails","states","setStates","districts","setDistricts","locationService","stateId","districtId","cities","setCities","pratisthacharya","dhwajaLabharthi","isParshvanath","is24TirthankarJinalaya","cityId","pincode","ShalaModal","City","rowData","setRowData","getDetails","District","cityModalRef","CityModal","DistrictModal","startDate","endDate","description","companyName","ageLimit","openingCount","experience","requiredGender","staying","food","contacts","parentName","age","gender","forOtherState","forOtherDistrict","forOtherCity","avatar","firstName","lastName","SubCategory","categoryId","categories","setCategories","setFile","imgUrl","slug","SubCategoryModal","Products","productId","_","attributeDetails","attributes","setAttributes","attributeId","thumbFile","setThumbFile","thumbImgUrl","subCategories","setSubCategories","filterdData","categoryIds","subCategoryIds","mode","optionLabelProp","price","actualPrice","hsn_code","inventory","metaTitle","metaTag","metaDescription","AttributeModal","users","fileType","fileUrl","userId","UploadOutlined","userType","DashboardOutlined","component","Dashboard","AppstoreOutlined","textTransform","kalyanakModalRef","BankOutlined","ApartmentOutlined","districtModalRef","shalaModalRef","CalendarOutlined","subCategoryModalRef","EcommSubCategory","attributeModalRef","setUsers","src","userService","controls","UserOutlined","doSave","setDoSave","result","greetingTime","Date","checkedChildren","unCheckedChildren","strong","editable","editing","triggerType","margin","BorderOutlined","currentPassword","newPassword","confirmNewPassword","routes","convertMultiToSingle","arr","prevBaseUrl","to","paths","useLocation","pathname","reduce","prev","cur","push","defaultSelectedKeys","pop","defaultOpenKeys","newRoutes","MyBreadcrumb","breads","setBreads","reverse","separator","Error404","subTitle","Top","preview","LogoutOutlined","window","localStorage","clear","reload","padding","lineHeight","MyLayout","collapsed","setCollapsed","minHeight","collapsible","onCollapse","overflow","left","bottom","maxWidth","Menu","marginLeft","path","element"],"sourceRoot":""}